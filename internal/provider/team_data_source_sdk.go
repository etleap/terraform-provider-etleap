// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package provider

import (
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/models/shared"
	"github.com/hashicorp/terraform-plugin-framework/types"
	"time"
)

func (r *TeamDataSourceModel) RefreshFromSharedTeamOutput(resp *shared.TeamOutput) {
	r.CreateDate = types.StringValue(resp.CreateDate.Format(time.RFC3339Nano))
	r.Description = types.StringValue(resp.Description)
	r.ID = types.StringValue(resp.ID)
	if len(r.Members) > len(resp.Members) {
		r.Members = r.Members[:len(resp.Members)]
	}
	for membersCount, membersItem := range resp.Members {
		var members1 User
		members1.EmailAddress = types.StringValue(membersItem.EmailAddress)
		members1.FirstName = types.StringValue(membersItem.FirstName)
		members1.ID = types.StringValue(membersItem.ID)
		members1.LastName = types.StringValue(membersItem.LastName)
		if membersCount+1 > len(r.Members) {
			r.Members = append(r.Members, members1)
		} else {
			r.Members[membersCount].EmailAddress = members1.EmailAddress
			r.Members[membersCount].FirstName = members1.FirstName
			r.Members[membersCount].ID = members1.ID
			r.Members[membersCount].LastName = members1.LastName
		}
	}
	r.Name = types.StringValue(resp.Name)
}

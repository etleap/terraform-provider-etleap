// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
)

type AutoTypeType string

const (
	AutoTypeTypeAuto AutoTypeType = "AUTO"
)

func (e AutoTypeType) ToPointer() *AutoTypeType {
	return &e
}

func (e *AutoTypeType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AUTO":
		*e = AutoTypeType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AutoTypeType: %v", v)
	}
}

// AutoType - A type that will be inferred automatically based on the sample.
type AutoType struct {
	Type *AutoTypeType `default:"AUTO" json:"type"`
}

func (a AutoType) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AutoType) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *AutoType) GetType() *AutoTypeType {
	if o == nil {
		return nil
	}
	return o.Type
}

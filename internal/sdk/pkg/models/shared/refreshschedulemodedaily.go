// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RefreshScheduleModeDailyMode string

const (
	RefreshScheduleModeDailyModeDaily RefreshScheduleModeDailyMode = "DAILY"
)

func (e RefreshScheduleModeDailyMode) ToPointer() *RefreshScheduleModeDailyMode {
	return &e
}

func (e *RefreshScheduleModeDailyMode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DAILY":
		*e = RefreshScheduleModeDailyMode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RefreshScheduleModeDailyMode: %v", v)
	}
}

type RefreshScheduleModeDaily struct {
	Mode RefreshScheduleModeDailyMode `json:"mode"`
	// Hour of day this schedule should trigger at (in UTC).
	HourOfDay int64 `json:"hourOfDay"`
}

func (o *RefreshScheduleModeDaily) GetMode() RefreshScheduleModeDailyMode {
	if o == nil {
		return RefreshScheduleModeDailyMode("")
	}
	return o.Mode
}

func (o *RefreshScheduleModeDaily) GetHourOfDay() int64 {
	if o == nil {
		return 0
	}
	return o.HourOfDay
}

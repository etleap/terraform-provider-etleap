// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceGoogleAdsType string

const (
	SourceGoogleAdsTypeGoogleAds SourceGoogleAdsType = "GOOGLE_ADS"
)

func (e SourceGoogleAdsType) ToPointer() *SourceGoogleAdsType {
	return &e
}

func (e *SourceGoogleAdsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GOOGLE_ADS":
		*e = SourceGoogleAdsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAdsType: %v", v)
	}
}

type SourceGoogleAds struct {
	// The universally unique identifier for the source.
	ConnectionID string              `json:"connectionId"`
	Type         SourceGoogleAdsType `json:"type"`
	// Notify if we can't extract for `x` hours. Setting it to `null` disables the notification. Defaults to `null`.
	LatencyThreshold *int64 `json:"latencyThreshold,omitempty"`
	// The Google Ads report type, capitalized and spelled with spaces between words.
	Entity string `json:"entity"`
	// Specify the report `attributed resources`. Example values: [campaign_budget.id, campaign_budget.name, bidding_strategy.type]
	AttributedResources []string `json:"attributedResources,omitempty"`
	// Specify the report `fields`. Example values: [campaign.resource_name, campaign.campaign_budget, campaign.advertising_channel_type]
	Fields []string `json:"fields,omitempty"`
	// Specify the report `segmentation` groups. Example values: [segments.date, segments.click_type, segments.geo_target_county]
	Segments []string `json:"segments,omitempty"`
	// Specify the report `metrics`. Example values: [metrics.clicks, metrics.all_conversions, metrics.average_cost]
	Metrics []string `json:"metrics,omitempty"`
}

func (o *SourceGoogleAds) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

func (o *SourceGoogleAds) GetType() SourceGoogleAdsType {
	if o == nil {
		return SourceGoogleAdsType("")
	}
	return o.Type
}

func (o *SourceGoogleAds) GetLatencyThreshold() *int64 {
	if o == nil {
		return nil
	}
	return o.LatencyThreshold
}

func (o *SourceGoogleAds) GetEntity() string {
	if o == nil {
		return ""
	}
	return o.Entity
}

func (o *SourceGoogleAds) GetAttributedResources() []string {
	if o == nil {
		return nil
	}
	return o.AttributedResources
}

func (o *SourceGoogleAds) GetFields() []string {
	if o == nil {
		return nil
	}
	return o.Fields
}

func (o *SourceGoogleAds) GetSegments() []string {
	if o == nil {
		return nil
	}
	return o.Segments
}

func (o *SourceGoogleAds) GetMetrics() []string {
	if o == nil {
		return nil
	}
	return o.Metrics
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
	"time"
)

type GrantUserType string

const (
	GrantUserTypeUser GrantUserType = "USER"
)

func (e GrantUserType) ToPointer() *GrantUserType {
	return &e
}

func (e *GrantUserType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "USER":
		*e = GrantUserType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GrantUserType: %v", v)
	}
}

// GrantUser - A grant providing access to an object in Etleap for a user.
type GrantUser struct {
	Type GrantUserType `json:"type"`
	ID   string        `json:"id"`
	// The date and time when then the grant was created.
	CreateDate   time.Time `json:"createDate"`
	UserID       string    `json:"userId"`
	FirstName    string    `json:"firstName"`
	LastName     string    `json:"lastName"`
	EmailAddress string    `json:"emailAddress"`
}

func (g GrantUser) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GrantUser) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *GrantUser) GetType() GrantUserType {
	if o == nil {
		return GrantUserType("")
	}
	return o.Type
}

func (o *GrantUser) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GrantUser) GetCreateDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreateDate
}

func (o *GrantUser) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *GrantUser) GetFirstName() string {
	if o == nil {
		return ""
	}
	return o.FirstName
}

func (o *GrantUser) GetLastName() string {
	if o == nil {
		return ""
	}
	return o.LastName
}

func (o *GrantUser) GetEmailAddress() string {
	if o == nil {
		return ""
	}
	return o.EmailAddress
}

// GrantUserInput - A grant providing access to an object in Etleap for a user.
type GrantUserInput struct {
	Type   GrantUserType `json:"type"`
	UserID string        `json:"userId"`
}

func (o *GrantUserInput) GetType() GrantUserType {
	if o == nil {
		return GrantUserType("")
	}
	return o.Type
}

func (o *GrantUserInput) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
)

type StringType1 string

const (
	StringType1String StringType1 = "STRING"
)

func (e StringType1) ToPointer() *StringType1 {
	return &e
}

func (e *StringType1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STRING":
		*e = StringType1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StringType1: %v", v)
	}
}

type StringTypeType string

const (
	StringTypeTypeStringType1        StringTypeType = "StringType_1"
	StringTypeTypeExtendedStringType StringTypeType = "ExtendedStringType"
)

type StringType struct {
	StringType1        *StringType1
	ExtendedStringType *ExtendedStringType

	Type StringTypeType
}

func CreateStringTypeStringType1(stringType1 StringType1) StringType {
	typ := StringTypeTypeStringType1

	return StringType{
		StringType1: &stringType1,
		Type:        typ,
	}
}

func CreateStringTypeExtendedStringType(extendedStringType ExtendedStringType) StringType {
	typ := StringTypeTypeExtendedStringType

	return StringType{
		ExtendedStringType: &extendedStringType,
		Type:               typ,
	}
}

func (u *StringType) UnmarshalJSON(data []byte) error {

	extendedStringType := new(ExtendedStringType)
	if err := utils.UnmarshalJSON(data, &extendedStringType, "", true, true); err == nil {
		u.ExtendedStringType = extendedStringType
		u.Type = StringTypeTypeExtendedStringType
		return nil
	}

	stringType1 := new(StringType1)
	if err := utils.UnmarshalJSON(data, &stringType1, "", true, true); err == nil {
		u.StringType1 = stringType1
		u.Type = StringTypeTypeStringType1
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u StringType) MarshalJSON() ([]byte, error) {
	if u.StringType1 != nil {
		return utils.MarshalJSON(u.StringType1, "", true)
	}

	if u.ExtendedStringType != nil {
		return utils.MarshalJSON(u.ExtendedStringType, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

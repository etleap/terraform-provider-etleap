// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
	"time"
)

type GrantWithPrivilegeUserType string

const (
	GrantWithPrivilegeUserTypeUser GrantWithPrivilegeUserType = "USER"
)

func (e GrantWithPrivilegeUserType) ToPointer() *GrantWithPrivilegeUserType {
	return &e
}

func (e *GrantWithPrivilegeUserType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "USER":
		*e = GrantWithPrivilegeUserType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GrantWithPrivilegeUserType: %v", v)
	}
}

type Privilege string

const (
	PrivilegeView Privilege = "VIEW"
	PrivilegeEdit Privilege = "EDIT"
)

func (e Privilege) ToPointer() *Privilege {
	return &e
}

func (e *Privilege) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VIEW":
		fallthrough
	case "EDIT":
		*e = Privilege(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Privilege: %v", v)
	}
}

// GrantWithPrivilegeUser - A grant with privilege providing access to an object in Etleap for a user.
type GrantWithPrivilegeUser struct {
	Type GrantWithPrivilegeUserType `json:"type"`
	ID   string                     `json:"id"`
	// The date and time when then the grant was created.
	CreateDate   time.Time `json:"createDate"`
	UserID       string    `json:"userId"`
	FirstName    string    `json:"firstName"`
	LastName     string    `json:"lastName"`
	EmailAddress string    `json:"emailAddress"`
	Privilege    Privilege `json:"privilege"`
}

func (g GrantWithPrivilegeUser) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GrantWithPrivilegeUser) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *GrantWithPrivilegeUser) GetType() GrantWithPrivilegeUserType {
	if o == nil {
		return GrantWithPrivilegeUserType("")
	}
	return o.Type
}

func (o *GrantWithPrivilegeUser) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GrantWithPrivilegeUser) GetCreateDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreateDate
}

func (o *GrantWithPrivilegeUser) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *GrantWithPrivilegeUser) GetFirstName() string {
	if o == nil {
		return ""
	}
	return o.FirstName
}

func (o *GrantWithPrivilegeUser) GetLastName() string {
	if o == nil {
		return ""
	}
	return o.LastName
}

func (o *GrantWithPrivilegeUser) GetEmailAddress() string {
	if o == nil {
		return ""
	}
	return o.EmailAddress
}

func (o *GrantWithPrivilegeUser) GetPrivilege() Privilege {
	if o == nil {
		return Privilege("")
	}
	return o.Privilege
}

// GrantWithPrivilegeUserInput - A grant with privilege providing access to an object in Etleap for a user.
type GrantWithPrivilegeUserInput struct {
	Type      GrantWithPrivilegeUserType `json:"type"`
	UserID    string                     `json:"userId"`
	Privilege Privilege                  `json:"privilege"`
}

func (o *GrantWithPrivilegeUserInput) GetType() GrantWithPrivilegeUserType {
	if o == nil {
		return GrantWithPrivilegeUserType("")
	}
	return o.Type
}

func (o *GrantWithPrivilegeUserInput) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *GrantWithPrivilegeUserInput) GetPrivilege() Privilege {
	if o == nil {
		return Privilege("")
	}
	return o.Privilege
}

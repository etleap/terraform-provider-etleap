// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceGoogleAnalyticsGa4Type string

const (
	SourceGoogleAnalyticsGa4TypeGoogleAnalyticsGa4 SourceGoogleAnalyticsGa4Type = "GOOGLE_ANALYTICS_GA4"
)

func (e SourceGoogleAnalyticsGa4Type) ToPointer() *SourceGoogleAnalyticsGa4Type {
	return &e
}

func (e *SourceGoogleAnalyticsGa4Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GOOGLE_ANALYTICS_GA4":
		*e = SourceGoogleAnalyticsGa4Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceGoogleAnalyticsGa4Type: %v", v)
	}
}

type SourceGoogleAnalyticsGa4 struct {
	Type SourceGoogleAnalyticsGa4Type `json:"type"`
	// The universally unique identifier for the source.
	ConnectionID string `json:"connectionId"`
	// Notify if we can't extract for `x` hours. Setting it to `null` disables the notification. Defaults to `null`.
	LatencyThreshold *int64 `json:"latencyThreshold,omitempty"`
	// The Google Analytics GA4 resource. Provide the ID of the GA4 resource. You can find out how to retrieve the ID of you resource <a href='https://developers.google.com/analytics/devguides/reporting/data/v1/property-id'>here</a>.
	Entity string `json:"entity"`
	// Dimensions are attributes for your data. Example values: [date, browser].
	Dimensions []string `json:"dimensions"`
	// Metrics represent quantitative measurements calculated by Google Analytics. Example values: [active1DayUsers, conversions]
	Metrics []string `json:"metrics"`
}

func (o *SourceGoogleAnalyticsGa4) GetType() SourceGoogleAnalyticsGa4Type {
	if o == nil {
		return SourceGoogleAnalyticsGa4Type("")
	}
	return o.Type
}

func (o *SourceGoogleAnalyticsGa4) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

func (o *SourceGoogleAnalyticsGa4) GetLatencyThreshold() *int64 {
	if o == nil {
		return nil
	}
	return o.LatencyThreshold
}

func (o *SourceGoogleAnalyticsGa4) GetEntity() string {
	if o == nil {
		return ""
	}
	return o.Entity
}

func (o *SourceGoogleAnalyticsGa4) GetDimensions() []string {
	if o == nil {
		return []string{}
	}
	return o.Dimensions
}

func (o *SourceGoogleAnalyticsGa4) GetMetrics() []string {
	if o == nil {
		return []string{}
	}
	return o.Metrics
}

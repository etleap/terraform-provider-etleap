// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PipelineUpdateModes - The pipeline mode refers to how the pipeline fetches data changes from the source and how those changes are applied to the destination table. See <a target="_blank" href="https://docs.etleap.com/docs/documentation/ZG9jOjIyMjE3ODA2-introduction">the documentation</a> for more details.
type PipelineUpdateModes string

const (
	PipelineUpdateModesAppend  PipelineUpdateModes = "APPEND"
	PipelineUpdateModesReplace PipelineUpdateModes = "REPLACE"
	PipelineUpdateModesUpdate  PipelineUpdateModes = "UPDATE"
	PipelineUpdateModesQuery   PipelineUpdateModes = "QUERY"
)

func (e PipelineUpdateModes) ToPointer() *PipelineUpdateModes {
	return &e
}

func (e *PipelineUpdateModes) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APPEND":
		fallthrough
	case "REPLACE":
		fallthrough
	case "UPDATE":
		fallthrough
	case "QUERY":
		*e = PipelineUpdateModes(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PipelineUpdateModes: %v", v)
	}
}

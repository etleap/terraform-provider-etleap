// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
	"time"
)

type ConnectionSalesforceMarketingCloudType string

const (
	ConnectionSalesforceMarketingCloudTypeSalesforceMarketingCloud ConnectionSalesforceMarketingCloudType = "SALESFORCE_MARKETING_CLOUD"
)

func (e ConnectionSalesforceMarketingCloudType) ToPointer() *ConnectionSalesforceMarketingCloudType {
	return &e
}

func (e *ConnectionSalesforceMarketingCloudType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SALESFORCE_MARKETING_CLOUD":
		*e = ConnectionSalesforceMarketingCloudType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionSalesforceMarketingCloudType: %v", v)
	}
}

// ConnectionSalesforceMarketingCloudStatus - The current status of the connection.
type ConnectionSalesforceMarketingCloudStatus string

const (
	ConnectionSalesforceMarketingCloudStatusUnknown     ConnectionSalesforceMarketingCloudStatus = "UNKNOWN"
	ConnectionSalesforceMarketingCloudStatusUp          ConnectionSalesforceMarketingCloudStatus = "UP"
	ConnectionSalesforceMarketingCloudStatusDown        ConnectionSalesforceMarketingCloudStatus = "DOWN"
	ConnectionSalesforceMarketingCloudStatusResize      ConnectionSalesforceMarketingCloudStatus = "RESIZE"
	ConnectionSalesforceMarketingCloudStatusMaintenance ConnectionSalesforceMarketingCloudStatus = "MAINTENANCE"
	ConnectionSalesforceMarketingCloudStatusQuota       ConnectionSalesforceMarketingCloudStatus = "QUOTA"
	ConnectionSalesforceMarketingCloudStatusCreating    ConnectionSalesforceMarketingCloudStatus = "CREATING"
)

func (e ConnectionSalesforceMarketingCloudStatus) ToPointer() *ConnectionSalesforceMarketingCloudStatus {
	return &e
}

func (e *ConnectionSalesforceMarketingCloudStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "UP":
		fallthrough
	case "DOWN":
		fallthrough
	case "RESIZE":
		fallthrough
	case "MAINTENANCE":
		fallthrough
	case "QUOTA":
		fallthrough
	case "CREATING":
		*e = ConnectionSalesforceMarketingCloudStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionSalesforceMarketingCloudStatus: %v", v)
	}
}

type ConnectionSalesforceMarketingCloudDefaultUpdateSchedule struct {
	// The pipeline mode refers to how the pipeline fetches data changes from the source and how those changes are applied to the destination table. See <a target="_blank" href="https://docs.etleap.com/docs/documentation/ZG9jOjIyMjE3ODA2-introduction">the documentation</a> for more details.
	PipelineMode *PipelineUpdateModes `json:"pipelineMode,omitempty"`
	// The update schedule defines when Etleap should automatically check the source for new data. See <a href= "https://support.etleap.com/hc/en-us/articles/360019768853-What-is-the-difference-between-a-Refresh-and-an-Update-" target="_blank" rel="noopener">Updates &amp; Refreshes</a> for more information. When undefined, the pipeline will default to the schedule set on the source connection.
	UpdateSchedule *UpdateScheduleTypes `json:"updateSchedule,omitempty"`
}

func (o *ConnectionSalesforceMarketingCloudDefaultUpdateSchedule) GetPipelineMode() *PipelineUpdateModes {
	if o == nil {
		return nil
	}
	return o.PipelineMode
}

func (o *ConnectionSalesforceMarketingCloudDefaultUpdateSchedule) GetUpdateSchedule() *UpdateScheduleTypes {
	if o == nil {
		return nil
	}
	return o.UpdateSchedule
}

func (o *ConnectionSalesforceMarketingCloudDefaultUpdateSchedule) GetUpdateScheduleInterval() *UpdateScheduleModeInterval {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeInterval
	}
	return nil
}

func (o *ConnectionSalesforceMarketingCloudDefaultUpdateSchedule) GetUpdateScheduleHourly() *UpdateScheduleModeHourly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeHourly
	}
	return nil
}

func (o *ConnectionSalesforceMarketingCloudDefaultUpdateSchedule) GetUpdateScheduleDaily() *UpdateScheduleModeDaily {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeDaily
	}
	return nil
}

func (o *ConnectionSalesforceMarketingCloudDefaultUpdateSchedule) GetUpdateScheduleWeekly() *UpdateScheduleModeWeekly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeWeekly
	}
	return nil
}

func (o *ConnectionSalesforceMarketingCloudDefaultUpdateSchedule) GetUpdateScheduleMonthly() *UpdateScheduleModeMonthly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeMonthly
	}
	return nil
}

type ConnectionSalesforceMarketingCloud struct {
	// The unique identifier of the connection.
	ID string `json:"id"`
	// The unique name of this connection.
	Name string                                 `json:"name"`
	Type ConnectionSalesforceMarketingCloudType `json:"type"`
	// Whether this connection has been marked as active.
	Active bool `json:"active"`
	// The current status of the connection.
	Status ConnectionSalesforceMarketingCloudStatus `json:"status"`
	// The date and time when then the connection was created.
	CreateDate time.Time `json:"createDate"`
	// The update schedule defines when Etleap should automatically check the source for new data. See <a href= "https://support.etleap.com/hc/en-us/articles/360019768853-What-is-the-difference-between-a-Refresh-and-an-Update-" target="_blank" rel="noopener">Updates &amp; Refreshes</a> for more information. When undefined, the pipeline will default to the schedule set on the source connection.
	UpdateSchedule *UpdateScheduleTypes `json:"updateSchedule,omitempty"`
	// When an update schedule is not defined for a connection, the default schedule is used. The default defined individually per `pipelineMode` and may be subject to change.
	DefaultUpdateSchedule []ConnectionSalesforceMarketingCloudDefaultUpdateSchedule `json:"defaultUpdateSchedule"`
	// You can find your Account Subdomain with the following <a target="_blank" href="https://developer.salesforce.com/docs/marketing/marketing-cloud/guide/your-subdomain-tenant-specific-endpoints.html#locate-your-subdomain-and-endpoints">guide</a>.
	Subdomain string `json:"subdomain"`
	// You can retrieve your credentials, by creating an <a target="_blank" href="https://developer.salesforce.com/docs/marketing/marketing-cloud/guide/create-integration-enhanced.html#related-items">integration</a>.
	ClientID string `json:"clientId"`
}

func (c ConnectionSalesforceMarketingCloud) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ConnectionSalesforceMarketingCloud) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ConnectionSalesforceMarketingCloud) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ConnectionSalesforceMarketingCloud) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ConnectionSalesforceMarketingCloud) GetType() ConnectionSalesforceMarketingCloudType {
	if o == nil {
		return ConnectionSalesforceMarketingCloudType("")
	}
	return o.Type
}

func (o *ConnectionSalesforceMarketingCloud) GetActive() bool {
	if o == nil {
		return false
	}
	return o.Active
}

func (o *ConnectionSalesforceMarketingCloud) GetStatus() ConnectionSalesforceMarketingCloudStatus {
	if o == nil {
		return ConnectionSalesforceMarketingCloudStatus("")
	}
	return o.Status
}

func (o *ConnectionSalesforceMarketingCloud) GetCreateDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreateDate
}

func (o *ConnectionSalesforceMarketingCloud) GetUpdateSchedule() *UpdateScheduleTypes {
	if o == nil {
		return nil
	}
	return o.UpdateSchedule
}

func (o *ConnectionSalesforceMarketingCloud) GetUpdateScheduleInterval() *UpdateScheduleModeInterval {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeInterval
	}
	return nil
}

func (o *ConnectionSalesforceMarketingCloud) GetUpdateScheduleHourly() *UpdateScheduleModeHourly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeHourly
	}
	return nil
}

func (o *ConnectionSalesforceMarketingCloud) GetUpdateScheduleDaily() *UpdateScheduleModeDaily {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeDaily
	}
	return nil
}

func (o *ConnectionSalesforceMarketingCloud) GetUpdateScheduleWeekly() *UpdateScheduleModeWeekly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeWeekly
	}
	return nil
}

func (o *ConnectionSalesforceMarketingCloud) GetUpdateScheduleMonthly() *UpdateScheduleModeMonthly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeMonthly
	}
	return nil
}

func (o *ConnectionSalesforceMarketingCloud) GetDefaultUpdateSchedule() []ConnectionSalesforceMarketingCloudDefaultUpdateSchedule {
	if o == nil {
		return []ConnectionSalesforceMarketingCloudDefaultUpdateSchedule{}
	}
	return o.DefaultUpdateSchedule
}

func (o *ConnectionSalesforceMarketingCloud) GetSubdomain() string {
	if o == nil {
		return ""
	}
	return o.Subdomain
}

func (o *ConnectionSalesforceMarketingCloud) GetClientID() string {
	if o == nil {
		return ""
	}
	return o.ClientID
}

type ConnectionSalesforceMarketingCloudInput struct {
	// The unique name of this connection.
	Name string                                 `json:"name"`
	Type ConnectionSalesforceMarketingCloudType `json:"type"`
	// The update schedule defines when Etleap should automatically check the source for new data. See <a href= "https://support.etleap.com/hc/en-us/articles/360019768853-What-is-the-difference-between-a-Refresh-and-an-Update-" target="_blank" rel="noopener">Updates &amp; Refreshes</a> for more information. When undefined, the pipeline will default to the schedule set on the source connection.
	UpdateSchedule *UpdateScheduleTypes `json:"updateSchedule,omitempty"`
	// You can find your Account Subdomain with the following <a target="_blank" href="https://developer.salesforce.com/docs/marketing/marketing-cloud/guide/your-subdomain-tenant-specific-endpoints.html#locate-your-subdomain-and-endpoints">guide</a>.
	Subdomain string `json:"subdomain"`
	// You can retrieve your credentials, by creating an <a target="_blank" href="https://developer.salesforce.com/docs/marketing/marketing-cloud/guide/create-integration-enhanced.html#related-items">integration</a>.
	ClientID string `json:"clientId"`
	// You can retrieve your credentials, by creating an <a target="_blank" href="https://developer.salesforce.com/docs/marketing/marketing-cloud/guide/create-integration-enhanced.html#related-items">integration</a>.
	ClientSecret string `json:"clientSecret"`
}

func (o *ConnectionSalesforceMarketingCloudInput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ConnectionSalesforceMarketingCloudInput) GetType() ConnectionSalesforceMarketingCloudType {
	if o == nil {
		return ConnectionSalesforceMarketingCloudType("")
	}
	return o.Type
}

func (o *ConnectionSalesforceMarketingCloudInput) GetUpdateSchedule() *UpdateScheduleTypes {
	if o == nil {
		return nil
	}
	return o.UpdateSchedule
}

func (o *ConnectionSalesforceMarketingCloudInput) GetUpdateScheduleInterval() *UpdateScheduleModeInterval {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeInterval
	}
	return nil
}

func (o *ConnectionSalesforceMarketingCloudInput) GetUpdateScheduleHourly() *UpdateScheduleModeHourly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeHourly
	}
	return nil
}

func (o *ConnectionSalesforceMarketingCloudInput) GetUpdateScheduleDaily() *UpdateScheduleModeDaily {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeDaily
	}
	return nil
}

func (o *ConnectionSalesforceMarketingCloudInput) GetUpdateScheduleWeekly() *UpdateScheduleModeWeekly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeWeekly
	}
	return nil
}

func (o *ConnectionSalesforceMarketingCloudInput) GetUpdateScheduleMonthly() *UpdateScheduleModeMonthly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeMonthly
	}
	return nil
}

func (o *ConnectionSalesforceMarketingCloudInput) GetSubdomain() string {
	if o == nil {
		return ""
	}
	return o.Subdomain
}

func (o *ConnectionSalesforceMarketingCloudInput) GetClientID() string {
	if o == nil {
		return ""
	}
	return o.ClientID
}

func (o *ConnectionSalesforceMarketingCloudInput) GetClientSecret() string {
	if o == nil {
		return ""
	}
	return o.ClientSecret
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// PipelineRetentionPolicy - Policy for the automatic deletion of rows in the destination.
type PipelineRetentionPolicy struct {
	// Number of days before a row gets removed.
	Period *int64 `json:"period,omitempty"`
	// Name of the column that is used to calculate the interval. Must be a `date` or a `datetime` column.
	Column *string `json:"column,omitempty"`
}

func (o *PipelineRetentionPolicy) GetPeriod() *int64 {
	if o == nil {
		return nil
	}
	return o.Period
}

func (o *PipelineRetentionPolicy) GetColumn() *string {
	if o == nil {
		return nil
	}
	return o.Column
}

type DestinationUpdate struct {
	// The universally unique identifier of the destination connection.
	ConnectionID string `json:"connectionId"`
	// Whether schema changes detected during transformation should be handled automatically or not. Defaults to `true`.
	AutomaticSchemaChanges *bool                    `json:"automaticSchemaChanges,omitempty"`
	RetentionPolicy        *PipelineRetentionPolicy `json:"retentionPolicy,omitempty"`
}

func (o *DestinationUpdate) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

func (o *DestinationUpdate) GetAutomaticSchemaChanges() *bool {
	if o == nil {
		return nil
	}
	return o.AutomaticSchemaChanges
}

func (o *DestinationUpdate) GetRetentionPolicy() *PipelineRetentionPolicy {
	if o == nil {
		return nil
	}
	return o.RetentionPolicy
}

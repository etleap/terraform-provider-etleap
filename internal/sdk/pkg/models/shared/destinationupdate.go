// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// PipelineRetentionPolicy - Policy for the automatic deletion of rows in the destination.
type PipelineRetentionPolicy struct {
	// Name of the column that is used to calculate the interval. Must be a `date` or a `datetime` column.
	Column *string `json:"column,omitempty"`
	// Number of days before a row gets removed.
	Period *int64 `json:"period,omitempty"`
}

func (o *PipelineRetentionPolicy) GetColumn() *string {
	if o == nil {
		return nil
	}
	return o.Column
}

func (o *PipelineRetentionPolicy) GetPeriod() *int64 {
	if o == nil {
		return nil
	}
	return o.Period
}

type DestinationUpdate struct {
	// The new destination table name. Renaming the table is an asynchronous operation. While the rename is in progress the destination property `tableChangingTo` is present in the pipeline API response, and the `table` property continues to have the old table name. When the destination property `tableChangingTo` is no longer present in the pipeline API response then the rename is complete, and `table` has the new table name.
	Table           *string                  `json:"table,omitempty"`
	RetentionPolicy *PipelineRetentionPolicy `json:"retentionPolicy,omitempty"`
	// The universally unique identifier of the destination connection.
	ConnectionID string `json:"connectionId"`
	// Whether schema changes detected during transformation should be handled automatically or not. Defaults to `true`.
	AutomaticSchemaChanges *bool `json:"automaticSchemaChanges,omitempty"`
	// The schema in the destination to move the table to. Moving the table is an asynchronous operation. While the move is in progress the destination property `schemaChangingTo` is present in the pipeline API response, and the `schema` property continues to have the schema that the table is being moved from. When the destination property `schemaChangingTo` is no longer present in the pipeline API response then the move is complete, and `schema` has the new schema.
	Schema *string `json:"schema,omitempty"`
}

func (o *DestinationUpdate) GetTable() *string {
	if o == nil {
		return nil
	}
	return o.Table
}

func (o *DestinationUpdate) GetRetentionPolicy() *PipelineRetentionPolicy {
	if o == nil {
		return nil
	}
	return o.RetentionPolicy
}

func (o *DestinationUpdate) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

func (o *DestinationUpdate) GetAutomaticSchemaChanges() *bool {
	if o == nil {
		return nil
	}
	return o.AutomaticSchemaChanges
}

func (o *DestinationUpdate) GetSchema() *string {
	if o == nil {
		return nil
	}
	return o.Schema
}

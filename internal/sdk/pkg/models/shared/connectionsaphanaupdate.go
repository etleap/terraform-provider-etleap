// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConnectionSapHanaUpdateType string

const (
	ConnectionSapHanaUpdateTypeSapHana ConnectionSapHanaUpdateType = "SAP_HANA"
)

func (e ConnectionSapHanaUpdateType) ToPointer() *ConnectionSapHanaUpdateType {
	return &e
}

func (e *ConnectionSapHanaUpdateType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SAP_HANA":
		*e = ConnectionSapHanaUpdateType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionSapHanaUpdateType: %v", v)
	}
}

type ConnectionSapHanaUpdateSSHConfigurationUpdate struct {
	// The username for the SSH connection.
	Username *string `json:"username,omitempty"`
	// The server address for the SSH connection.
	Address *string `json:"address,omitempty"`
}

func (o *ConnectionSapHanaUpdateSSHConfigurationUpdate) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}

func (o *ConnectionSapHanaUpdateSSHConfigurationUpdate) GetAddress() *string {
	if o == nil {
		return nil
	}
	return o.Address
}

// ConnectionSapHanaUpdate - Specifies the location of a database.
type ConnectionSapHanaUpdate struct {
	// Whether this connection should be marked as active.
	Active *bool                       `json:"active,omitempty"`
	Type   ConnectionSapHanaUpdateType `json:"type"`
	// The unique name of this connection.
	Name *string `json:"name,omitempty"`
	// The update schedule defines when Etleap should automatically check the source for new data. See <a href= "https://support.etleap.com/hc/en-us/articles/360019768853-What-is-the-difference-between-a-Refresh-and-an-Update-" target="_blank" rel="noopener">Updates &amp; Refreshes</a> for more information. When undefined, the pipeline will default to the schedule set on the source connection.
	UpdateSchedule *UpdateScheduleTypes `json:"updateSchedule,omitempty"`
	// If not specified, the default schema will be used.
	//
	// Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
	Schema    *string                                        `json:"schema,omitempty"`
	Username  *string                                        `json:"username,omitempty"`
	SSHConfig *ConnectionSapHanaUpdateSSHConfigurationUpdate `json:"sshConfig,omitempty"`
	Password  *string                                        `json:"password,omitempty"`
	Port      *int64                                         `json:"port,omitempty"`
	Address   *string                                        `json:"address,omitempty"`
	Database  *string                                        `json:"database,omitempty"`
}

func (o *ConnectionSapHanaUpdate) GetActive() *bool {
	if o == nil {
		return nil
	}
	return o.Active
}

func (o *ConnectionSapHanaUpdate) GetType() ConnectionSapHanaUpdateType {
	if o == nil {
		return ConnectionSapHanaUpdateType("")
	}
	return o.Type
}

func (o *ConnectionSapHanaUpdate) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ConnectionSapHanaUpdate) GetUpdateSchedule() *UpdateScheduleTypes {
	if o == nil {
		return nil
	}
	return o.UpdateSchedule
}

func (o *ConnectionSapHanaUpdate) GetUpdateScheduleMonthly() *UpdateScheduleModeMonthly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeMonthly
	}
	return nil
}

func (o *ConnectionSapHanaUpdate) GetUpdateScheduleHourly() *UpdateScheduleModeHourly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeHourly
	}
	return nil
}

func (o *ConnectionSapHanaUpdate) GetUpdateScheduleInterval() *UpdateScheduleModeInterval {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeInterval
	}
	return nil
}

func (o *ConnectionSapHanaUpdate) GetUpdateScheduleDaily() *UpdateScheduleModeDaily {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeDaily
	}
	return nil
}

func (o *ConnectionSapHanaUpdate) GetUpdateScheduleWeekly() *UpdateScheduleModeWeekly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeWeekly
	}
	return nil
}

func (o *ConnectionSapHanaUpdate) GetSchema() *string {
	if o == nil {
		return nil
	}
	return o.Schema
}

func (o *ConnectionSapHanaUpdate) GetUsername() *string {
	if o == nil {
		return nil
	}
	return o.Username
}

func (o *ConnectionSapHanaUpdate) GetSSHConfig() *ConnectionSapHanaUpdateSSHConfigurationUpdate {
	if o == nil {
		return nil
	}
	return o.SSHConfig
}

func (o *ConnectionSapHanaUpdate) GetPassword() *string {
	if o == nil {
		return nil
	}
	return o.Password
}

func (o *ConnectionSapHanaUpdate) GetPort() *int64 {
	if o == nil {
		return nil
	}
	return o.Port
}

func (o *ConnectionSapHanaUpdate) GetAddress() *string {
	if o == nil {
		return nil
	}
	return o.Address
}

func (o *ConnectionSapHanaUpdate) GetDatabase() *string {
	if o == nil {
		return nil
	}
	return o.Database
}

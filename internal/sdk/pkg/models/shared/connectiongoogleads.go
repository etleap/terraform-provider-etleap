// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
	"time"
)

type ConnectionGoogleAdsType string

const (
	ConnectionGoogleAdsTypeGoogleAds ConnectionGoogleAdsType = "GOOGLE_ADS"
)

func (e ConnectionGoogleAdsType) ToPointer() *ConnectionGoogleAdsType {
	return &e
}

func (e *ConnectionGoogleAdsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GOOGLE_ADS":
		*e = ConnectionGoogleAdsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionGoogleAdsType: %v", v)
	}
}

// ConnectionGoogleAdsStatus - The current status of the connection.
type ConnectionGoogleAdsStatus string

const (
	ConnectionGoogleAdsStatusUnknown     ConnectionGoogleAdsStatus = "UNKNOWN"
	ConnectionGoogleAdsStatusUp          ConnectionGoogleAdsStatus = "UP"
	ConnectionGoogleAdsStatusDown        ConnectionGoogleAdsStatus = "DOWN"
	ConnectionGoogleAdsStatusResize      ConnectionGoogleAdsStatus = "RESIZE"
	ConnectionGoogleAdsStatusMaintenance ConnectionGoogleAdsStatus = "MAINTENANCE"
	ConnectionGoogleAdsStatusQuota       ConnectionGoogleAdsStatus = "QUOTA"
	ConnectionGoogleAdsStatusCreating    ConnectionGoogleAdsStatus = "CREATING"
)

func (e ConnectionGoogleAdsStatus) ToPointer() *ConnectionGoogleAdsStatus {
	return &e
}

func (e *ConnectionGoogleAdsStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "UP":
		fallthrough
	case "DOWN":
		fallthrough
	case "RESIZE":
		fallthrough
	case "MAINTENANCE":
		fallthrough
	case "QUOTA":
		fallthrough
	case "CREATING":
		*e = ConnectionGoogleAdsStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionGoogleAdsStatus: %v", v)
	}
}

type ConnectionGoogleAds struct {
	// The unique identifier of the connection.
	ID string `json:"id"`
	// The unique name of this connection.
	Name string                  `json:"name"`
	Type ConnectionGoogleAdsType `json:"type"`
	// Whether this connection has been marked as active.
	Active bool `json:"active"`
	// The current status of the connection.
	Status ConnectionGoogleAdsStatus `json:"status"`
	// The date and time when then the connection was created.
	CreateDate time.Time `json:"createDate"`
	// The ID of the customer you want to log in as. Etleap will extract the data of all customers that this login customer has access to. 10 digits without hyphens.
	CustomerID string `json:"customerId"`
}

func (c ConnectionGoogleAds) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ConnectionGoogleAds) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *ConnectionGoogleAds) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ConnectionGoogleAds) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ConnectionGoogleAds) GetType() ConnectionGoogleAdsType {
	if o == nil {
		return ConnectionGoogleAdsType("")
	}
	return o.Type
}

func (o *ConnectionGoogleAds) GetActive() bool {
	if o == nil {
		return false
	}
	return o.Active
}

func (o *ConnectionGoogleAds) GetStatus() ConnectionGoogleAdsStatus {
	if o == nil {
		return ConnectionGoogleAdsStatus("")
	}
	return o.Status
}

func (o *ConnectionGoogleAds) GetCreateDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreateDate
}

func (o *ConnectionGoogleAds) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

type ConnectionGoogleAdsInput struct {
	// The unique name of this connection.
	Name string                  `json:"name"`
	Type ConnectionGoogleAdsType `json:"type"`
	// Code retrieved from `/connections/oauth2-initiation`. **Note:** it is short-lived, therefore the connection creation should be done as soon as code is returned.
	Code string `json:"code"`
	// The ID of the customer you want to log in as. Etleap will extract the data of all customers that this login customer has access to. 10 digits without hyphens.
	CustomerID string `json:"customerId"`
}

func (o *ConnectionGoogleAdsInput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ConnectionGoogleAdsInput) GetType() ConnectionGoogleAdsType {
	if o == nil {
		return ConnectionGoogleAdsType("")
	}
	return o.Type
}

func (o *ConnectionGoogleAdsInput) GetCode() string {
	if o == nil {
		return ""
	}
	return o.Code
}

func (o *ConnectionGoogleAdsInput) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
	"time"
)

type ConnectionGoogleAdsType string

const (
	ConnectionGoogleAdsTypeGoogleAds ConnectionGoogleAdsType = "GOOGLE_ADS"
)

func (e ConnectionGoogleAdsType) ToPointer() *ConnectionGoogleAdsType {
	return &e
}

func (e *ConnectionGoogleAdsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GOOGLE_ADS":
		*e = ConnectionGoogleAdsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionGoogleAdsType: %v", v)
	}
}

// ConnectionGoogleAdsStatus - The current status of the connection.
type ConnectionGoogleAdsStatus string

const (
	ConnectionGoogleAdsStatusUnknown     ConnectionGoogleAdsStatus = "UNKNOWN"
	ConnectionGoogleAdsStatusUp          ConnectionGoogleAdsStatus = "UP"
	ConnectionGoogleAdsStatusDown        ConnectionGoogleAdsStatus = "DOWN"
	ConnectionGoogleAdsStatusResize      ConnectionGoogleAdsStatus = "RESIZE"
	ConnectionGoogleAdsStatusMaintenance ConnectionGoogleAdsStatus = "MAINTENANCE"
	ConnectionGoogleAdsStatusQuota       ConnectionGoogleAdsStatus = "QUOTA"
	ConnectionGoogleAdsStatusCreating    ConnectionGoogleAdsStatus = "CREATING"
)

func (e ConnectionGoogleAdsStatus) ToPointer() *ConnectionGoogleAdsStatus {
	return &e
}

func (e *ConnectionGoogleAdsStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "UP":
		fallthrough
	case "DOWN":
		fallthrough
	case "RESIZE":
		fallthrough
	case "MAINTENANCE":
		fallthrough
	case "QUOTA":
		fallthrough
	case "CREATING":
		*e = ConnectionGoogleAdsStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionGoogleAdsStatus: %v", v)
	}
}

type ConnectionGoogleAdsDefaultUpdateSchedule struct {
	// The pipeline mode refers to how the pipeline fetches data changes from the source and how those changes are applied to the destination table. See <a target="_blank" href="https://docs.etleap.com/docs/documentation/ZG9jOjIyMjE3ODA2-introduction">the documentation</a> for more details.
	PipelineMode *PipelineUpdateModes `json:"pipelineMode,omitempty"`
	// The update schedule defines when Etleap should automatically check the source for new data. See <a href= "https://support.etleap.com/hc/en-us/articles/360019768853-What-is-the-difference-between-a-Refresh-and-an-Update-" target="_blank" rel="noopener">Updates &amp; Refreshes</a> for more information. When undefined, the pipeline will default to the schedule set on the source connection.
	UpdateSchedule *UpdateScheduleTypes `json:"updateSchedule,omitempty"`
}

func (o *ConnectionGoogleAdsDefaultUpdateSchedule) GetPipelineMode() *PipelineUpdateModes {
	if o == nil {
		return nil
	}
	return o.PipelineMode
}

func (o *ConnectionGoogleAdsDefaultUpdateSchedule) GetUpdateSchedule() *UpdateScheduleTypes {
	if o == nil {
		return nil
	}
	return o.UpdateSchedule
}

func (o *ConnectionGoogleAdsDefaultUpdateSchedule) GetUpdateScheduleInterval() *UpdateScheduleModeInterval {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeInterval
	}
	return nil
}

func (o *ConnectionGoogleAdsDefaultUpdateSchedule) GetUpdateScheduleHourly() *UpdateScheduleModeHourly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeHourly
	}
	return nil
}

func (o *ConnectionGoogleAdsDefaultUpdateSchedule) GetUpdateScheduleDaily() *UpdateScheduleModeDaily {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeDaily
	}
	return nil
}

func (o *ConnectionGoogleAdsDefaultUpdateSchedule) GetUpdateScheduleWeekly() *UpdateScheduleModeWeekly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeWeekly
	}
	return nil
}

func (o *ConnectionGoogleAdsDefaultUpdateSchedule) GetUpdateScheduleMonthly() *UpdateScheduleModeMonthly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeMonthly
	}
	return nil
}

type ConnectionGoogleAds struct {
	// The unique identifier of the connection.
	ID string `json:"id"`
	// The unique name of this connection.
	Name string                  `json:"name"`
	Type ConnectionGoogleAdsType `json:"type"`
	// Whether this connection has been marked as active.
	Active bool `json:"active"`
	// The current status of the connection.
	Status ConnectionGoogleAdsStatus `json:"status"`
	// The date and time when then the connection was created.
	CreateDate time.Time `json:"createDate"`
	// The update schedule defines when Etleap should automatically check the source for new data. See <a href= "https://support.etleap.com/hc/en-us/articles/360019768853-What-is-the-difference-between-a-Refresh-and-an-Update-" target="_blank" rel="noopener">Updates &amp; Refreshes</a> for more information. When undefined, the pipeline will default to the schedule set on the source connection.
	UpdateSchedule *UpdateScheduleTypes `json:"updateSchedule,omitempty"`
	// When an update schedule is not defined for a connection, the default schedule is used. The default defined individually per `pipelineMode` and may be subject to change.
	DefaultUpdateSchedule []ConnectionGoogleAdsDefaultUpdateSchedule `json:"defaultUpdateSchedule"`
	// The ID of the customer you want to log in as. Etleap will extract the data of all customers that this login customer has access to. 10 digits without hyphens.
	CustomerID string `json:"customerId"`
}

func (c ConnectionGoogleAds) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ConnectionGoogleAds) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ConnectionGoogleAds) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ConnectionGoogleAds) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ConnectionGoogleAds) GetType() ConnectionGoogleAdsType {
	if o == nil {
		return ConnectionGoogleAdsType("")
	}
	return o.Type
}

func (o *ConnectionGoogleAds) GetActive() bool {
	if o == nil {
		return false
	}
	return o.Active
}

func (o *ConnectionGoogleAds) GetStatus() ConnectionGoogleAdsStatus {
	if o == nil {
		return ConnectionGoogleAdsStatus("")
	}
	return o.Status
}

func (o *ConnectionGoogleAds) GetCreateDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreateDate
}

func (o *ConnectionGoogleAds) GetUpdateSchedule() *UpdateScheduleTypes {
	if o == nil {
		return nil
	}
	return o.UpdateSchedule
}

func (o *ConnectionGoogleAds) GetUpdateScheduleInterval() *UpdateScheduleModeInterval {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeInterval
	}
	return nil
}

func (o *ConnectionGoogleAds) GetUpdateScheduleHourly() *UpdateScheduleModeHourly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeHourly
	}
	return nil
}

func (o *ConnectionGoogleAds) GetUpdateScheduleDaily() *UpdateScheduleModeDaily {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeDaily
	}
	return nil
}

func (o *ConnectionGoogleAds) GetUpdateScheduleWeekly() *UpdateScheduleModeWeekly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeWeekly
	}
	return nil
}

func (o *ConnectionGoogleAds) GetUpdateScheduleMonthly() *UpdateScheduleModeMonthly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeMonthly
	}
	return nil
}

func (o *ConnectionGoogleAds) GetDefaultUpdateSchedule() []ConnectionGoogleAdsDefaultUpdateSchedule {
	if o == nil {
		return []ConnectionGoogleAdsDefaultUpdateSchedule{}
	}
	return o.DefaultUpdateSchedule
}

func (o *ConnectionGoogleAds) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

type ConnectionGoogleAdsInput struct {
	// The unique name of this connection.
	Name string                  `json:"name"`
	Type ConnectionGoogleAdsType `json:"type"`
	// The update schedule defines when Etleap should automatically check the source for new data. See <a href= "https://support.etleap.com/hc/en-us/articles/360019768853-What-is-the-difference-between-a-Refresh-and-an-Update-" target="_blank" rel="noopener">Updates &amp; Refreshes</a> for more information. When undefined, the pipeline will default to the schedule set on the source connection.
	UpdateSchedule *UpdateScheduleTypes `json:"updateSchedule,omitempty"`
	// Code retrieved from `/connections/oauth2-initiation`. **Note:** it is short-lived, therefore the connection creation should be done as soon as code is returned.
	Code string `json:"code"`
	// The ID of the customer you want to log in as. Etleap will extract the data of all customers that this login customer has access to. 10 digits without hyphens.
	CustomerID string `json:"customerId"`
}

func (o *ConnectionGoogleAdsInput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ConnectionGoogleAdsInput) GetType() ConnectionGoogleAdsType {
	if o == nil {
		return ConnectionGoogleAdsType("")
	}
	return o.Type
}

func (o *ConnectionGoogleAdsInput) GetUpdateSchedule() *UpdateScheduleTypes {
	if o == nil {
		return nil
	}
	return o.UpdateSchedule
}

func (o *ConnectionGoogleAdsInput) GetUpdateScheduleInterval() *UpdateScheduleModeInterval {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeInterval
	}
	return nil
}

func (o *ConnectionGoogleAdsInput) GetUpdateScheduleHourly() *UpdateScheduleModeHourly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeHourly
	}
	return nil
}

func (o *ConnectionGoogleAdsInput) GetUpdateScheduleDaily() *UpdateScheduleModeDaily {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeDaily
	}
	return nil
}

func (o *ConnectionGoogleAdsInput) GetUpdateScheduleWeekly() *UpdateScheduleModeWeekly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeWeekly
	}
	return nil
}

func (o *ConnectionGoogleAdsInput) GetUpdateScheduleMonthly() *UpdateScheduleModeMonthly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeMonthly
	}
	return nil
}

func (o *ConnectionGoogleAdsInput) GetCode() string {
	if o == nil {
		return ""
	}
	return o.Code
}

func (o *ConnectionGoogleAdsInput) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

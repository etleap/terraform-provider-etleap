// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
)

type SchemaV1ExtendedReplaceModeType string

const (
	SchemaV1ExtendedReplaceModeTypeReplace SchemaV1ExtendedReplaceModeType = "REPLACE"
)

func (e SchemaV1ExtendedReplaceModeType) ToPointer() *SchemaV1ExtendedReplaceModeType {
	return &e
}

func (e *SchemaV1ExtendedReplaceModeType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REPLACE":
		*e = SchemaV1ExtendedReplaceModeType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SchemaV1ExtendedReplaceModeType: %v", v)
	}
}

type SchemaV1ExtendedReplaceMode struct {
	Type              *SchemaV1ExtendedReplaceModeType `default:"REPLACE" json:"type"`
	PrimaryKeyColumns []string                         `json:"primaryKeyColumns"`
	// The foreign columns of the entity.
	ForeignKeyColumns []SchemaV1ForeignKeyColumn `json:"foreignKeyColumns,omitempty"`
}

func (s SchemaV1ExtendedReplaceMode) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SchemaV1ExtendedReplaceMode) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *SchemaV1ExtendedReplaceMode) GetType() *SchemaV1ExtendedReplaceModeType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *SchemaV1ExtendedReplaceMode) GetPrimaryKeyColumns() []string {
	if o == nil {
		return []string{}
	}
	return o.PrimaryKeyColumns
}

func (o *SchemaV1ExtendedReplaceMode) GetForeignKeyColumns() []SchemaV1ForeignKeyColumn {
	if o == nil {
		return nil
	}
	return o.ForeignKeyColumns
}

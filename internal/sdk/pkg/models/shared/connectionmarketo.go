// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
	"time"
)

type ConnectionMarketoType string

const (
	ConnectionMarketoTypeMarketo ConnectionMarketoType = "MARKETO"
)

func (e ConnectionMarketoType) ToPointer() *ConnectionMarketoType {
	return &e
}

func (e *ConnectionMarketoType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MARKETO":
		*e = ConnectionMarketoType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionMarketoType: %v", v)
	}
}

// ConnectionMarketoStatus - The current status of the connection.
type ConnectionMarketoStatus string

const (
	ConnectionMarketoStatusUnknown     ConnectionMarketoStatus = "UNKNOWN"
	ConnectionMarketoStatusUp          ConnectionMarketoStatus = "UP"
	ConnectionMarketoStatusDown        ConnectionMarketoStatus = "DOWN"
	ConnectionMarketoStatusResize      ConnectionMarketoStatus = "RESIZE"
	ConnectionMarketoStatusMaintenance ConnectionMarketoStatus = "MAINTENANCE"
	ConnectionMarketoStatusQuota       ConnectionMarketoStatus = "QUOTA"
	ConnectionMarketoStatusCreating    ConnectionMarketoStatus = "CREATING"
)

func (e ConnectionMarketoStatus) ToPointer() *ConnectionMarketoStatus {
	return &e
}

func (e *ConnectionMarketoStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "UP":
		fallthrough
	case "DOWN":
		fallthrough
	case "RESIZE":
		fallthrough
	case "MAINTENANCE":
		fallthrough
	case "QUOTA":
		fallthrough
	case "CREATING":
		*e = ConnectionMarketoStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionMarketoStatus: %v", v)
	}
}

type ConnectionMarketo struct {
	// The unique identifier of the connection.
	ID string `json:"id"`
	// The unique name of this connection.
	Name string                `json:"name"`
	Type ConnectionMarketoType `json:"type"`
	// Whether this connection has been marked as active.
	Active bool `json:"active"`
	// The current status of the connection.
	Status ConnectionMarketoStatus `json:"status"`
	// The date and time when then the connection was created.
	CreateDate time.Time `json:"createDate"`
	// E.g. 'https://259-ZDK-675.mktoapi.com/soap/mktows/2_9'. In the Marketo UI this is the 'Endpoint' value in the 'SOAP API' section.
	SoapEndpoint string `json:"soapEndpoint"`
	// E.g. 'MKTOWS_259-ZDK-675_1'. In the Marketo UI this is the 'User ID' value in the 'SOAP API' section.
	SoapUserID string `json:"soapUserId"`
	// E.g. 'https://259-ZDK-675.mktorest.com/rest'. In the Marketo UI this is the 'Endpoint' value in the 'REST API' section.
	RestEndpoint string `json:"restEndpoint"`
	// Under Admin -> Integration -> LaunchPoint, you can find this value by clicking 'View Details'.
	RestClientID string `json:"restClientId"`
	// The maximum number of requests Etleap will use per day. Your Marketo account's daily quota is the 'Daily Request Limit' number under Admin -> Integration -> Web Services. We recommend setting this to 75% of your Marketo limit.
	QuotaLimit int64 `json:"quotaLimit"`
}

func (c ConnectionMarketo) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ConnectionMarketo) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *ConnectionMarketo) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ConnectionMarketo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ConnectionMarketo) GetType() ConnectionMarketoType {
	if o == nil {
		return ConnectionMarketoType("")
	}
	return o.Type
}

func (o *ConnectionMarketo) GetActive() bool {
	if o == nil {
		return false
	}
	return o.Active
}

func (o *ConnectionMarketo) GetStatus() ConnectionMarketoStatus {
	if o == nil {
		return ConnectionMarketoStatus("")
	}
	return o.Status
}

func (o *ConnectionMarketo) GetCreateDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreateDate
}

func (o *ConnectionMarketo) GetSoapEndpoint() string {
	if o == nil {
		return ""
	}
	return o.SoapEndpoint
}

func (o *ConnectionMarketo) GetSoapUserID() string {
	if o == nil {
		return ""
	}
	return o.SoapUserID
}

func (o *ConnectionMarketo) GetRestEndpoint() string {
	if o == nil {
		return ""
	}
	return o.RestEndpoint
}

func (o *ConnectionMarketo) GetRestClientID() string {
	if o == nil {
		return ""
	}
	return o.RestClientID
}

func (o *ConnectionMarketo) GetQuotaLimit() int64 {
	if o == nil {
		return 0
	}
	return o.QuotaLimit
}

type ConnectionMarketoInput struct {
	// The unique name of this connection.
	Name string                `json:"name"`
	Type ConnectionMarketoType `json:"type"`
	// E.g. 'https://259-ZDK-675.mktoapi.com/soap/mktows/2_9'. In the Marketo UI this is the 'Endpoint' value in the 'SOAP API' section.
	SoapEndpoint string `json:"soapEndpoint"`
	// E.g. 'MKTOWS_259-ZDK-675_1'. In the Marketo UI this is the 'User ID' value in the 'SOAP API' section.
	SoapUserID string `json:"soapUserId"`
	// In the Marketo UI this is the 'Encryption Key' value in the 'SOAP API' section.
	SoapEncryptionKey string `json:"soapEncryptionKey"`
	// E.g. 'https://259-ZDK-675.mktorest.com/rest'. In the Marketo UI this is the 'Endpoint' value in the 'REST API' section.
	RestEndpoint string `json:"restEndpoint"`
	// Under Admin -> Integration -> LaunchPoint, you can find this value by clicking 'View Details'.
	RestClientID string `json:"restClientId"`
	// Under Admin -> Integration -> LaunchPoint, you can find this value by clicking 'View Details'.
	RestClientSecret string `json:"restClientSecret"`
	// The maximum number of requests Etleap will use per day. Your Marketo account's daily quota is the 'Daily Request Limit' number under Admin -> Integration -> Web Services. We recommend setting this to 75% of your Marketo limit.
	QuotaLimit int64 `json:"quotaLimit"`
}

func (o *ConnectionMarketoInput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ConnectionMarketoInput) GetType() ConnectionMarketoType {
	if o == nil {
		return ConnectionMarketoType("")
	}
	return o.Type
}

func (o *ConnectionMarketoInput) GetSoapEndpoint() string {
	if o == nil {
		return ""
	}
	return o.SoapEndpoint
}

func (o *ConnectionMarketoInput) GetSoapUserID() string {
	if o == nil {
		return ""
	}
	return o.SoapUserID
}

func (o *ConnectionMarketoInput) GetSoapEncryptionKey() string {
	if o == nil {
		return ""
	}
	return o.SoapEncryptionKey
}

func (o *ConnectionMarketoInput) GetRestEndpoint() string {
	if o == nil {
		return ""
	}
	return o.RestEndpoint
}

func (o *ConnectionMarketoInput) GetRestClientID() string {
	if o == nil {
		return ""
	}
	return o.RestClientID
}

func (o *ConnectionMarketoInput) GetRestClientSecret() string {
	if o == nil {
		return ""
	}
	return o.RestClientSecret
}

func (o *ConnectionMarketoInput) GetQuotaLimit() int64 {
	if o == nil {
		return 0
	}
	return o.QuotaLimit
}

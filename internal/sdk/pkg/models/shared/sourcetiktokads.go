// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceTikTokAdsType string

const (
	SourceTikTokAdsTypeTikTokAds SourceTikTokAdsType = "TIK_TOK_ADS"
)

func (e SourceTikTokAdsType) ToPointer() *SourceTikTokAdsType {
	return &e
}

func (e *SourceTikTokAdsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TIK_TOK_ADS":
		*e = SourceTikTokAdsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceTikTokAdsType: %v", v)
	}
}

type SourceTikTokAds struct {
	// The universally unique identifier for the source.
	ConnectionID string              `json:"connectionId"`
	Type         SourceTikTokAdsType `json:"type"`
	// Notify if we can't extract for `x` hours. Setting it to `null` disables the notification. Defaults to `null`.
	LatencyThreshold *int64 `json:"latencyThreshold,omitempty"`
	// The TikTok Ads resource. Example values: [AD, ADGROUP, ADVERTISER, CAMPAIGN and REPORT]
	Entity string `json:"entity"`
	// Specify the report `metrics` if and only if the entity is 'REPORT'. Example values: [ad_name, clicks, conversion]
	Metrics []string `json:"metrics,omitempty"`
	// Specify the report `data level` if and only if the entity is 'REPORT'. Example values: [AUCTION_AD, AUCTION_CAMPAIGN, RESERVATION_AD]
	DataLevel *string `json:"dataLevel,omitempty"`
	// Specify the report `dimension` groups if and only if the entity is 'REPORT'. Example values: [start_time_day, start_time_hour, campaign_id]
	Dimensions []string `json:"dimensions,omitempty"`
}

func (o *SourceTikTokAds) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

func (o *SourceTikTokAds) GetType() SourceTikTokAdsType {
	if o == nil {
		return SourceTikTokAdsType("")
	}
	return o.Type
}

func (o *SourceTikTokAds) GetLatencyThreshold() *int64 {
	if o == nil {
		return nil
	}
	return o.LatencyThreshold
}

func (o *SourceTikTokAds) GetEntity() string {
	if o == nil {
		return ""
	}
	return o.Entity
}

func (o *SourceTikTokAds) GetMetrics() []string {
	if o == nil {
		return nil
	}
	return o.Metrics
}

func (o *SourceTikTokAds) GetDataLevel() *string {
	if o == nil {
		return nil
	}
	return o.DataLevel
}

func (o *SourceTikTokAds) GetDimensions() []string {
	if o == nil {
		return nil
	}
	return o.Dimensions
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
	"time"
)

// Script - Specifies a script based on an array of transforms. Not all transforms available in the Wrangler are supported yet for this script format.
type Script struct {
	// An array consisting of a single "To Rows" transform followed by any number of other transforms.
	Transforms []TransformTypes `json:"transforms"`
	// Maps output column names to types inferred from data.
	InferredColumnTypes map[string]Type `json:"inferredColumnTypes,omitempty"`
	// Defaults to UTF-8.
	Charset *string `json:"charset,omitempty"`
	// The date and time when then the script was created.
	CreateDate time.Time `json:"createDate"`
}

func (s Script) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *Script) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *Script) GetTransforms() []TransformTypes {
	if o == nil {
		return []TransformTypes{}
	}
	return o.Transforms
}

func (o *Script) GetInferredColumnTypes() map[string]Type {
	if o == nil {
		return nil
	}
	return o.InferredColumnTypes
}

func (o *Script) GetCharset() *string {
	if o == nil {
		return nil
	}
	return o.Charset
}

func (o *Script) GetCreateDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreateDate
}

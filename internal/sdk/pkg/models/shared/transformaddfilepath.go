// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TransformAddFilePathType string

const (
	TransformAddFilePathTypeAddFilePath TransformAddFilePathType = "ADD_FILE_PATH"
)

func (e TransformAddFilePathType) ToPointer() *TransformAddFilePathType {
	return &e
}

func (e *TransformAddFilePathType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ADD_FILE_PATH":
		*e = TransformAddFilePathType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TransformAddFilePathType: %v", v)
	}
}

// TransformAddFilePath - Add the file path. Creates a column containing the path where each row was extracted from. <br/>The new column is called `file_path`.
type TransformAddFilePath struct {
	Type TransformAddFilePathType `json:"type"`
}

func (o *TransformAddFilePath) GetType() TransformAddFilePathType {
	if o == nil {
		return TransformAddFilePathType("")
	}
	return o.Type
}

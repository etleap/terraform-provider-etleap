// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourcePinterestAdsType string

const (
	SourcePinterestAdsTypePinterestAds SourcePinterestAdsType = "PINTEREST_ADS"
)

func (e SourcePinterestAdsType) ToPointer() *SourcePinterestAdsType {
	return &e
}

func (e *SourcePinterestAdsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PINTEREST_ADS":
		*e = SourcePinterestAdsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourcePinterestAdsType: %v", v)
	}
}

type SourcePinterestAds struct {
	// The universally unique identifier for the source.
	ConnectionID string                 `json:"connectionId"`
	Type         SourcePinterestAdsType `json:"type"`
	// Notify if we can't extract for `x` hours. Setting it to `null` disables the notification. Defaults to `null`.
	LatencyThreshold *int64 `json:"latencyThreshold,omitempty"`
	// The Pinterest Ads resource. Example values: [ad_accounts, ad_groups, ads, campaigns and reports]
	Entity string `json:"entity"`
	// Specify the report `targeting types` if and only if the entity is 'reports'. Example values: [KEYWORD, APPTYPE, LOCATION]
	TargetingTypes []string `json:"targeting_types,omitempty"`
	// Specify the report `data level` if and only if the entity is 'reports'. Example values: [ADVERTISER, CAMPAIGN, AD_GROUP]
	Level []string `json:"level,omitempty"`
	// Specify the report `metrics` if and only if the entity is 'reports'. Example values: [SPEND_IN_MICRO_DOLLAR, PAID_IMPRESSION, CPC_IN_MICRO_DOLLAR]
	Columns []string `json:"columns,omitempty"`
}

func (o *SourcePinterestAds) GetConnectionID() string {
	if o == nil {
		return ""
	}
	return o.ConnectionID
}

func (o *SourcePinterestAds) GetType() SourcePinterestAdsType {
	if o == nil {
		return SourcePinterestAdsType("")
	}
	return o.Type
}

func (o *SourcePinterestAds) GetLatencyThreshold() *int64 {
	if o == nil {
		return nil
	}
	return o.LatencyThreshold
}

func (o *SourcePinterestAds) GetEntity() string {
	if o == nil {
		return ""
	}
	return o.Entity
}

func (o *SourcePinterestAds) GetTargetingTypes() []string {
	if o == nil {
		return nil
	}
	return o.TargetingTypes
}

func (o *SourcePinterestAds) GetLevel() []string {
	if o == nil {
		return nil
	}
	return o.Level
}

func (o *SourcePinterestAds) GetColumns() []string {
	if o == nil {
		return nil
	}
	return o.Columns
}

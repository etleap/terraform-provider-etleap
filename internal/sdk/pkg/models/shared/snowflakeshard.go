// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// SnowflakeShard - Use shards when the database is split amongst several physical machines, but should be treated as a single database.
type SnowflakeShard struct {
	ShardID  string `json:"shardId"`
	Address  string `json:"address"`
	Database string `json:"database"`
	// The virtual warehouse to use once connected.
	Warehouse string `json:"warehouse"`
	Username  string `json:"username"`
	Password  string `json:"password"`
	// The role the user will use to connect
	Role *string `json:"role,omitempty"`
}

func (o *SnowflakeShard) GetShardID() string {
	if o == nil {
		return ""
	}
	return o.ShardID
}

func (o *SnowflakeShard) GetAddress() string {
	if o == nil {
		return ""
	}
	return o.Address
}

func (o *SnowflakeShard) GetDatabase() string {
	if o == nil {
		return ""
	}
	return o.Database
}

func (o *SnowflakeShard) GetWarehouse() string {
	if o == nil {
		return ""
	}
	return o.Warehouse
}

func (o *SnowflakeShard) GetUsername() string {
	if o == nil {
		return ""
	}
	return o.Username
}

func (o *SnowflakeShard) GetPassword() string {
	if o == nil {
		return ""
	}
	return o.Password
}

func (o *SnowflakeShard) GetRole() *string {
	if o == nil {
		return nil
	}
	return o.Role
}

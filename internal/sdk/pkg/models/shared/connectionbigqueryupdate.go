// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConnectionBigQueryUpdateType string

const (
	ConnectionBigQueryUpdateTypeBigquery ConnectionBigQueryUpdateType = "BIGQUERY"
)

func (e ConnectionBigQueryUpdateType) ToPointer() *ConnectionBigQueryUpdateType {
	return &e
}

func (e *ConnectionBigQueryUpdateType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BIGQUERY":
		*e = ConnectionBigQueryUpdateType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionBigQueryUpdateType: %v", v)
	}
}

type ConnectionBigQueryUpdate struct {
	// Whether this connection should be marked as active.
	Active *bool                         `json:"active,omitempty"`
	Type   *ConnectionBigQueryUpdateType `json:"type"`
	// The unique name of this connection.
	Name *string `json:"name,omitempty"`
	// The update schedule defines when Etleap should automatically check the source for new data. See <a href= "https://support.etleap.com/hc/en-us/articles/360019768853-What-is-the-difference-between-a-Refresh-and-an-Update-" target="_blank" rel="noopener">Updates &amp; Refreshes</a> for more information. When undefined, the pipeline will default to the schedule set on the source connection.
	UpdateSchedule *UpdateScheduleTypes `json:"updateSchedule,omitempty"`
	// To generate new JSON Credentials, go to the [Google Cloud Console](https://console.cloud.google.com/apis/credentials/), make sure you are on the correct project, and create or select an existing service account. Select the service account, and under "Keys" create a new key in JSON format. Paste the JSON object into the "JSON Credentials" fields.
	JSONCredentials *string `json:"jsonCredentials,omitempty"`
	// Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
	Dataset *string `json:"dataset,omitempty"`
}

func (o *ConnectionBigQueryUpdate) GetActive() *bool {
	if o == nil {
		return nil
	}
	return o.Active
}

func (o *ConnectionBigQueryUpdate) GetType() *ConnectionBigQueryUpdateType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *ConnectionBigQueryUpdate) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ConnectionBigQueryUpdate) GetUpdateSchedule() *UpdateScheduleTypes {
	if o == nil {
		return nil
	}
	return o.UpdateSchedule
}

func (o *ConnectionBigQueryUpdate) GetUpdateScheduleMonthly() *UpdateScheduleModeMonthly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeMonthly
	}
	return nil
}

func (o *ConnectionBigQueryUpdate) GetUpdateScheduleHourly() *UpdateScheduleModeHourly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeHourly
	}
	return nil
}

func (o *ConnectionBigQueryUpdate) GetUpdateScheduleInterval() *UpdateScheduleModeInterval {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeInterval
	}
	return nil
}

func (o *ConnectionBigQueryUpdate) GetUpdateScheduleDaily() *UpdateScheduleModeDaily {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeDaily
	}
	return nil
}

func (o *ConnectionBigQueryUpdate) GetUpdateScheduleWeekly() *UpdateScheduleModeWeekly {
	if v := o.GetUpdateSchedule(); v != nil {
		return v.UpdateScheduleModeWeekly
	}
	return nil
}

func (o *ConnectionBigQueryUpdate) GetJSONCredentials() *string {
	if o == nil {
		return nil
	}
	return o.JSONCredentials
}

func (o *ConnectionBigQueryUpdate) GetDataset() *string {
	if o == nil {
		return nil
	}
	return o.Dataset
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DistributionStyleKeyType string

const (
	DistributionStyleKeyTypeKey DistributionStyleKeyType = "KEY"
)

func (e DistributionStyleKeyType) ToPointer() *DistributionStyleKeyType {
	return &e
}

func (e *DistributionStyleKeyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "KEY":
		*e = DistributionStyleKeyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DistributionStyleKeyType: %v", v)
	}
}

type DistributionStyleKey struct {
	Column string                   `json:"column"`
	Type   DistributionStyleKeyType `json:"type"`
}

func (o *DistributionStyleKey) GetColumn() string {
	if o == nil {
		return ""
	}
	return o.Column
}

func (o *DistributionStyleKey) GetType() DistributionStyleKeyType {
	if o == nil {
		return DistributionStyleKeyType("")
	}
	return o.Type
}

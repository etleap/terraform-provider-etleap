// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
)

type Name string

const (
	NameArray Name = "ARRAY"
)

func (e Name) ToPointer() *Name {
	return &e
}

func (e *Name) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ARRAY":
		*e = Name(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Name: %v", v)
	}
}

type ArrayType struct {
	Name *Name `default:"ARRAY" json:"name"`
	// The type of the column.
	SubType ColumnType `json:"subType"`
	// Setting this to `true` will result in each array element becoming a row in the current table (see [split JSON array to rows](https://docs.etleap.com/docs/documentation/ZG9jOjQ3NzYzODY0-split-json-array-to-rows)). Otherwise, the array will be extracted into a sub-table (see [extract JSON array to sub-table](https://docs.etleap.com/docs/documentation/ZG9jOjQ3NzYzODU3-extract-json-array-to-sub-table)). Currently, this value can be set to true for at most one column per entity, and because Etleap creates a column named "index" there can be no other column in the entity with this name.
	SplitToRows *bool `default:"false" json:"splitToRows"`
}

func (a ArrayType) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *ArrayType) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *ArrayType) GetName() *Name {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ArrayType) GetSubType() ColumnType {
	if o == nil {
		return ColumnType{}
	}
	return o.SubType
}

func (o *ArrayType) GetSplitToRows() *bool {
	if o == nil {
		return nil
	}
	return o.SplitToRows
}

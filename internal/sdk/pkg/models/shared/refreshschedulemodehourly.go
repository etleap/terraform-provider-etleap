// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RefreshScheduleModeHourlyMode string

const (
	RefreshScheduleModeHourlyModeHourly RefreshScheduleModeHourlyMode = "HOURLY"
)

func (e RefreshScheduleModeHourlyMode) ToPointer() *RefreshScheduleModeHourlyMode {
	return &e
}

func (e *RefreshScheduleModeHourlyMode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HOURLY":
		*e = RefreshScheduleModeHourlyMode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RefreshScheduleModeHourlyMode: %v", v)
	}
}

type RefreshScheduleModeHourly struct {
	Mode RefreshScheduleModeHourlyMode `json:"mode"`
}

func (o *RefreshScheduleModeHourly) GetMode() RefreshScheduleModeHourlyMode {
	if o == nil {
		return RefreshScheduleModeHourlyMode("")
	}
	return o.Mode
}

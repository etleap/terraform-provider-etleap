// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
)

type NumberType1 string

const (
	NumberType1Number NumberType1 = "NUMBER"
)

func (e NumberType1) ToPointer() *NumberType1 {
	return &e
}

func (e *NumberType1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NUMBER":
		*e = NumberType1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NumberType1: %v", v)
	}
}

type NumberTypeType string

const (
	NumberTypeTypeNumberType1        NumberTypeType = "NumberType_1"
	NumberTypeTypeExtendedNumberType NumberTypeType = "ExtendedNumberType"
)

type NumberType struct {
	NumberType1        *NumberType1
	ExtendedNumberType *ExtendedNumberType

	Type NumberTypeType
}

func CreateNumberTypeNumberType1(numberType1 NumberType1) NumberType {
	typ := NumberTypeTypeNumberType1

	return NumberType{
		NumberType1: &numberType1,
		Type:        typ,
	}
}

func CreateNumberTypeExtendedNumberType(extendedNumberType ExtendedNumberType) NumberType {
	typ := NumberTypeTypeExtendedNumberType

	return NumberType{
		ExtendedNumberType: &extendedNumberType,
		Type:               typ,
	}
}

func (u *NumberType) UnmarshalJSON(data []byte) error {

	extendedNumberType := new(ExtendedNumberType)
	if err := utils.UnmarshalJSON(data, &extendedNumberType, "", true, true); err == nil {
		u.ExtendedNumberType = extendedNumberType
		u.Type = NumberTypeTypeExtendedNumberType
		return nil
	}

	numberType1 := new(NumberType1)
	if err := utils.UnmarshalJSON(data, &numberType1, "", true, true); err == nil {
		u.NumberType1 = numberType1
		u.Type = NumberTypeTypeNumberType1
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u NumberType) MarshalJSON() ([]byte, error) {
	if u.NumberType1 != nil {
		return utils.MarshalJSON(u.NumberType1, "", true)
	}

	if u.ExtendedNumberType != nil {
		return utils.MarshalJSON(u.ExtendedNumberType, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

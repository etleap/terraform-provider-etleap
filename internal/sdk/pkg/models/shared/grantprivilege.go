// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GrantPrivilegePrivilege string

const (
	GrantPrivilegePrivilegeView GrantPrivilegePrivilege = "VIEW"
	GrantPrivilegePrivilegeEdit GrantPrivilegePrivilege = "EDIT"
)

func (e GrantPrivilegePrivilege) ToPointer() *GrantPrivilegePrivilege {
	return &e
}

func (e *GrantPrivilegePrivilege) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VIEW":
		fallthrough
	case "EDIT":
		*e = GrantPrivilegePrivilege(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GrantPrivilegePrivilege: %v", v)
	}
}

// GrantPrivilege - Input for grant PATCH endpoint.
type GrantPrivilege struct {
	Privilege GrantPrivilegePrivilege `json:"privilege"`
}

func (o *GrantPrivilege) GetPrivilege() GrantPrivilegePrivilege {
	if o == nil {
		return GrantPrivilegePrivilege("")
	}
	return o.Privilege
}

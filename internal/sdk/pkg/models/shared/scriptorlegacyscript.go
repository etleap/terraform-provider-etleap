// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"errors"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
)

type ScriptOrLegacyScriptType string

const (
	ScriptOrLegacyScriptTypeScript       ScriptOrLegacyScriptType = "script"
	ScriptOrLegacyScriptTypeLegacyScript ScriptOrLegacyScriptType = "legacy_script"
)

// ScriptOrLegacyScript - Whenever a script is required, we accept and/or return two types of scripts: a Script or Legacy Script. We return a Script object if all transforms specified in that script are supported by this API. Otherwise it will return a Legacy Script. Either Script or Legacy Script can be used when adding a script to a pipeline.
type ScriptOrLegacyScript struct {
	Script       *Script
	LegacyScript *LegacyScript

	Type ScriptOrLegacyScriptType
}

func CreateScriptOrLegacyScriptScript(script Script) ScriptOrLegacyScript {
	typ := ScriptOrLegacyScriptTypeScript

	return ScriptOrLegacyScript{
		Script: &script,
		Type:   typ,
	}
}

func CreateScriptOrLegacyScriptLegacyScript(legacyScript LegacyScript) ScriptOrLegacyScript {
	typ := ScriptOrLegacyScriptTypeLegacyScript

	return ScriptOrLegacyScript{
		LegacyScript: &legacyScript,
		Type:         typ,
	}
}

func (u *ScriptOrLegacyScript) UnmarshalJSON(data []byte) error {

	legacyScript := new(LegacyScript)
	if err := utils.UnmarshalJSON(data, &legacyScript, "", true, true); err == nil {
		u.LegacyScript = legacyScript
		u.Type = ScriptOrLegacyScriptTypeLegacyScript
		return nil
	}

	script := new(Script)
	if err := utils.UnmarshalJSON(data, &script, "", true, true); err == nil {
		u.Script = script
		u.Type = ScriptOrLegacyScriptTypeScript
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u ScriptOrLegacyScript) MarshalJSON() ([]byte, error) {
	if u.Script != nil {
		return utils.MarshalJSON(u.Script, "", true)
	}

	if u.LegacyScript != nil {
		return utils.MarshalJSON(u.LegacyScript, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

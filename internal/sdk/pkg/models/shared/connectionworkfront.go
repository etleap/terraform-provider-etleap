// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
	"time"
)

type ConnectionWorkfrontType string

const (
	ConnectionWorkfrontTypeWorkfront ConnectionWorkfrontType = "WORKFRONT"
)

func (e ConnectionWorkfrontType) ToPointer() *ConnectionWorkfrontType {
	return &e
}

func (e *ConnectionWorkfrontType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WORKFRONT":
		*e = ConnectionWorkfrontType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionWorkfrontType: %v", v)
	}
}

// ConnectionWorkfrontStatus - The current status of the connection.
type ConnectionWorkfrontStatus string

const (
	ConnectionWorkfrontStatusUnknown     ConnectionWorkfrontStatus = "UNKNOWN"
	ConnectionWorkfrontStatusUp          ConnectionWorkfrontStatus = "UP"
	ConnectionWorkfrontStatusDown        ConnectionWorkfrontStatus = "DOWN"
	ConnectionWorkfrontStatusResize      ConnectionWorkfrontStatus = "RESIZE"
	ConnectionWorkfrontStatusMaintenance ConnectionWorkfrontStatus = "MAINTENANCE"
	ConnectionWorkfrontStatusQuota       ConnectionWorkfrontStatus = "QUOTA"
	ConnectionWorkfrontStatusCreating    ConnectionWorkfrontStatus = "CREATING"
)

func (e ConnectionWorkfrontStatus) ToPointer() *ConnectionWorkfrontStatus {
	return &e
}

func (e *ConnectionWorkfrontStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "UP":
		fallthrough
	case "DOWN":
		fallthrough
	case "RESIZE":
		fallthrough
	case "MAINTENANCE":
		fallthrough
	case "QUOTA":
		fallthrough
	case "CREATING":
		*e = ConnectionWorkfrontStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionWorkfrontStatus: %v", v)
	}
}

type ConnectionWorkfront struct {
	// The unique identifier of the connection.
	ID string `json:"id"`
	// The unique name of this connection.
	Name string                  `json:"name"`
	Type ConnectionWorkfrontType `json:"type"`
	// Whether this connection has been marked as active.
	Active bool `json:"active"`
	// The current status of the connection.
	Status ConnectionWorkfrontStatus `json:"status"`
	// The date and time when then the connection was created.
	CreateDate time.Time `json:"createDate"`
	// Your Workfront subdomain (i.e. SUBDOMAIN.my.workfront.com)
	Subdomain string `json:"subdomain"`
}

func (c ConnectionWorkfront) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ConnectionWorkfront) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *ConnectionWorkfront) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ConnectionWorkfront) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ConnectionWorkfront) GetType() ConnectionWorkfrontType {
	if o == nil {
		return ConnectionWorkfrontType("")
	}
	return o.Type
}

func (o *ConnectionWorkfront) GetActive() bool {
	if o == nil {
		return false
	}
	return o.Active
}

func (o *ConnectionWorkfront) GetStatus() ConnectionWorkfrontStatus {
	if o == nil {
		return ConnectionWorkfrontStatus("")
	}
	return o.Status
}

func (o *ConnectionWorkfront) GetCreateDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreateDate
}

func (o *ConnectionWorkfront) GetSubdomain() string {
	if o == nil {
		return ""
	}
	return o.Subdomain
}

type ConnectionWorkfrontInput struct {
	// The unique name of this connection.
	Name string                  `json:"name"`
	Type ConnectionWorkfrontType `json:"type"`
	// Your Workfront subdomain (i.e. SUBDOMAIN.my.workfront.com)
	Subdomain string `json:"subdomain"`
	// The client API key required to authenticate with the Workfront API. API keys can be generated by <a target="_blank" href="https://experience.workfront.com/s/article/Managing-API-Keys-for-the-Workfront-System-1973288244?ui-force-components-controllers-recordGlobalValueProvider.RecordGvp.getRecord=1&r=7"> following the documentation here</a>.
	APIKey string `json:"apiKey"`
}

func (o *ConnectionWorkfrontInput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ConnectionWorkfrontInput) GetType() ConnectionWorkfrontType {
	if o == nil {
		return ConnectionWorkfrontType("")
	}
	return o.Type
}

func (o *ConnectionWorkfrontInput) GetSubdomain() string {
	if o == nil {
		return ""
	}
	return o.Subdomain
}

func (o *ConnectionWorkfrontInput) GetAPIKey() string {
	if o == nil {
		return ""
	}
	return o.APIKey
}

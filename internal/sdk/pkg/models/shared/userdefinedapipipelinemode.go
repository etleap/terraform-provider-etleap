// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
)

type UserDefinedAPIPipelineMode1 string

const (
	UserDefinedAPIPipelineMode1Replace UserDefinedAPIPipelineMode1 = "REPLACE"
)

func (e UserDefinedAPIPipelineMode1) ToPointer() *UserDefinedAPIPipelineMode1 {
	return &e
}

func (e *UserDefinedAPIPipelineMode1) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REPLACE":
		*e = UserDefinedAPIPipelineMode1(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserDefinedAPIPipelineMode1: %v", v)
	}
}

type UserDefinedAPIPipelineModeType string

const (
	UserDefinedAPIPipelineModeTypeUserDefinedAPIPipelineMode1 UserDefinedAPIPipelineModeType = "user_defined_api_pipeline_mode_1"
	UserDefinedAPIPipelineModeTypeUserDefinedAPIReplaceMode   UserDefinedAPIPipelineModeType = "user_defined_api_replace_mode"
	UserDefinedAPIPipelineModeTypeUserDefinedAPIUpdateMode    UserDefinedAPIPipelineModeType = "user_defined_api_update_mode"
)

// UserDefinedAPIPipelineMode - Can be either the string `REPLACE` or one of the supported objects.
type UserDefinedAPIPipelineMode struct {
	UserDefinedAPIPipelineMode1 *UserDefinedAPIPipelineMode1
	UserDefinedAPIReplaceMode   *UserDefinedAPIReplaceMode
	UserDefinedAPIUpdateMode    *UserDefinedAPIUpdateMode

	Type UserDefinedAPIPipelineModeType
}

func CreateUserDefinedAPIPipelineModeUserDefinedAPIPipelineMode1(userDefinedAPIPipelineMode1 UserDefinedAPIPipelineMode1) UserDefinedAPIPipelineMode {
	typ := UserDefinedAPIPipelineModeTypeUserDefinedAPIPipelineMode1

	return UserDefinedAPIPipelineMode{
		UserDefinedAPIPipelineMode1: &userDefinedAPIPipelineMode1,
		Type:                        typ,
	}
}

func CreateUserDefinedAPIPipelineModeUserDefinedAPIReplaceMode(userDefinedAPIReplaceMode UserDefinedAPIReplaceMode) UserDefinedAPIPipelineMode {
	typ := UserDefinedAPIPipelineModeTypeUserDefinedAPIReplaceMode

	return UserDefinedAPIPipelineMode{
		UserDefinedAPIReplaceMode: &userDefinedAPIReplaceMode,
		Type:                      typ,
	}
}

func CreateUserDefinedAPIPipelineModeUserDefinedAPIUpdateMode(userDefinedAPIUpdateMode UserDefinedAPIUpdateMode) UserDefinedAPIPipelineMode {
	typ := UserDefinedAPIPipelineModeTypeUserDefinedAPIUpdateMode

	return UserDefinedAPIPipelineMode{
		UserDefinedAPIUpdateMode: &userDefinedAPIUpdateMode,
		Type:                     typ,
	}
}

func (u *UserDefinedAPIPipelineMode) UnmarshalJSON(data []byte) error {

	userDefinedAPIReplaceMode := new(UserDefinedAPIReplaceMode)
	if err := utils.UnmarshalJSON(data, &userDefinedAPIReplaceMode, "", true, true); err == nil {
		u.UserDefinedAPIReplaceMode = userDefinedAPIReplaceMode
		u.Type = UserDefinedAPIPipelineModeTypeUserDefinedAPIReplaceMode
		return nil
	}

	userDefinedAPIUpdateMode := new(UserDefinedAPIUpdateMode)
	if err := utils.UnmarshalJSON(data, &userDefinedAPIUpdateMode, "", true, true); err == nil {
		u.UserDefinedAPIUpdateMode = userDefinedAPIUpdateMode
		u.Type = UserDefinedAPIPipelineModeTypeUserDefinedAPIUpdateMode
		return nil
	}

	userDefinedAPIPipelineMode1 := new(UserDefinedAPIPipelineMode1)
	if err := utils.UnmarshalJSON(data, &userDefinedAPIPipelineMode1, "", true, true); err == nil {
		u.UserDefinedAPIPipelineMode1 = userDefinedAPIPipelineMode1
		u.Type = UserDefinedAPIPipelineModeTypeUserDefinedAPIPipelineMode1
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u UserDefinedAPIPipelineMode) MarshalJSON() ([]byte, error) {
	if u.UserDefinedAPIPipelineMode1 != nil {
		return utils.MarshalJSON(u.UserDefinedAPIPipelineMode1, "", true)
	}

	if u.UserDefinedAPIReplaceMode != nil {
		return utils.MarshalJSON(u.UserDefinedAPIReplaceMode, "", true)
	}

	if u.UserDefinedAPIUpdateMode != nil {
		return utils.MarshalJSON(u.UserDefinedAPIUpdateMode, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

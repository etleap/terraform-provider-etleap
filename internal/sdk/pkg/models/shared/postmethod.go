// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
)

type PostMethodType string

const (
	PostMethodTypePost PostMethodType = "POST"
)

func (e PostMethodType) ToPointer() *PostMethodType {
	return &e
}

func (e *PostMethodType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "POST":
		*e = PostMethodType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostMethodType: %v", v)
	}
}

type PostMethod struct {
	Type *PostMethodType `default:"POST" json:"type"`
	// A list of body parameters to be passed with all the requests.
	BodyParameters []BodyParameters `json:"bodyParameters,omitempty"`
}

func (p PostMethod) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PostMethod) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *PostMethod) GetType() *PostMethodType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *PostMethod) GetBodyParameters() []BodyParameters {
	if o == nil {
		return nil
	}
	return o.BodyParameters
}

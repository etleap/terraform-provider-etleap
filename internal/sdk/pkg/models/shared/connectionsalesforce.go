// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
	"time"
)

type ConnectionSalesforceType string

const (
	ConnectionSalesforceTypeSalesforce ConnectionSalesforceType = "SALESFORCE"
)

func (e ConnectionSalesforceType) ToPointer() *ConnectionSalesforceType {
	return &e
}

func (e *ConnectionSalesforceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SALESFORCE":
		*e = ConnectionSalesforceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionSalesforceType: %v", v)
	}
}

// ConnectionSalesforceStatus - The current status of the connection.
type ConnectionSalesforceStatus string

const (
	ConnectionSalesforceStatusUnknown     ConnectionSalesforceStatus = "UNKNOWN"
	ConnectionSalesforceStatusUp          ConnectionSalesforceStatus = "UP"
	ConnectionSalesforceStatusDown        ConnectionSalesforceStatus = "DOWN"
	ConnectionSalesforceStatusResize      ConnectionSalesforceStatus = "RESIZE"
	ConnectionSalesforceStatusMaintenance ConnectionSalesforceStatus = "MAINTENANCE"
	ConnectionSalesforceStatusQuota       ConnectionSalesforceStatus = "QUOTA"
	ConnectionSalesforceStatusCreating    ConnectionSalesforceStatus = "CREATING"
)

func (e ConnectionSalesforceStatus) ToPointer() *ConnectionSalesforceStatus {
	return &e
}

func (e *ConnectionSalesforceStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "UP":
		fallthrough
	case "DOWN":
		fallthrough
	case "RESIZE":
		fallthrough
	case "MAINTENANCE":
		fallthrough
	case "QUOTA":
		fallthrough
	case "CREATING":
		*e = ConnectionSalesforceStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionSalesforceStatus: %v", v)
	}
}

type ConnectionSalesforce struct {
	// The unique identifier of the connection.
	ID string `json:"id"`
	// The unique name of this connection.
	Name string                   `json:"name"`
	Type ConnectionSalesforceType `json:"type"`
	// Whether this connection has been marked as active.
	Active bool `json:"active"`
	// The current status of the connection.
	Status ConnectionSalesforceStatus `json:"status"`
	// The date and time when then the connection was created.
	CreateDate  time.Time `json:"createDate"`
	Sandbox     bool      `json:"sandbox"`
	Username    string    `json:"username"`
	InstanceURL string    `json:"instanceUrl"`
	// The maximum number of Bulk API batch requests Etleap will use per 24-hour window. Etleap will also stop if the remaining quota goes under 500 requests.
	QuotaLimit int64 `json:"quotaLimit"`
}

func (c ConnectionSalesforce) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ConnectionSalesforce) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *ConnectionSalesforce) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ConnectionSalesforce) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ConnectionSalesforce) GetType() ConnectionSalesforceType {
	if o == nil {
		return ConnectionSalesforceType("")
	}
	return o.Type
}

func (o *ConnectionSalesforce) GetActive() bool {
	if o == nil {
		return false
	}
	return o.Active
}

func (o *ConnectionSalesforce) GetStatus() ConnectionSalesforceStatus {
	if o == nil {
		return ConnectionSalesforceStatus("")
	}
	return o.Status
}

func (o *ConnectionSalesforce) GetCreateDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreateDate
}

func (o *ConnectionSalesforce) GetSandbox() bool {
	if o == nil {
		return false
	}
	return o.Sandbox
}

func (o *ConnectionSalesforce) GetUsername() string {
	if o == nil {
		return ""
	}
	return o.Username
}

func (o *ConnectionSalesforce) GetInstanceURL() string {
	if o == nil {
		return ""
	}
	return o.InstanceURL
}

func (o *ConnectionSalesforce) GetQuotaLimit() int64 {
	if o == nil {
		return 0
	}
	return o.QuotaLimit
}

type ConnectionSalesforceInput struct {
	// The unique name of this connection.
	Name string                   `json:"name"`
	Type ConnectionSalesforceType `json:"type"`
	// Code retrieved from `/connections/oauth2-initiation`. **Note:** it is short-lived, therefore the connection creation should be done as soon as code is returned.
	Code    string `json:"code"`
	Sandbox bool   `json:"sandbox"`
	// The maximum number of Bulk API batch requests Etleap will use per 24-hour window. Etleap will also stop if the remaining quota goes under 500 requests.
	QuotaLimit int64 `json:"quotaLimit"`
}

func (o *ConnectionSalesforceInput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *ConnectionSalesforceInput) GetType() ConnectionSalesforceType {
	if o == nil {
		return ConnectionSalesforceType("")
	}
	return o.Type
}

func (o *ConnectionSalesforceInput) GetCode() string {
	if o == nil {
		return ""
	}
	return o.Code
}

func (o *ConnectionSalesforceInput) GetSandbox() bool {
	if o == nil {
		return false
	}
	return o.Sandbox
}

func (o *ConnectionSalesforceInput) GetQuotaLimit() int64 {
	if o == nil {
		return 0
	}
	return o.QuotaLimit
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
)

type OffsetPagingStrategyType string

const (
	OffsetPagingStrategyTypeOffset OffsetPagingStrategyType = "OFFSET"
)

func (e OffsetPagingStrategyType) ToPointer() *OffsetPagingStrategyType {
	return &e
}

func (e *OffsetPagingStrategyType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OFFSET":
		*e = OffsetPagingStrategyType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OffsetPagingStrategyType: %v", v)
	}
}

// OffsetPagingStrategy - Paging strategy that is based on a result set offset.
type OffsetPagingStrategy struct {
	// The name of the request parameter used to specify the page size.
	PageSizeFieldName string `json:"pageSizeFieldName"`
	// The maximum page size supported by the API.
	MaxPageSize int64                     `json:"maxPageSize"`
	Type        *OffsetPagingStrategyType `default:"OFFSET" json:"type"`
	// The name of the request parameter used to specify the offset.
	OffsetFieldName string `json:"offsetFieldName"`
}

func (o OffsetPagingStrategy) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *OffsetPagingStrategy) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *OffsetPagingStrategy) GetPageSizeFieldName() string {
	if o == nil {
		return ""
	}
	return o.PageSizeFieldName
}

func (o *OffsetPagingStrategy) GetMaxPageSize() int64 {
	if o == nil {
		return 0
	}
	return o.MaxPageSize
}

func (o *OffsetPagingStrategy) GetType() *OffsetPagingStrategyType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *OffsetPagingStrategy) GetOffsetFieldName() string {
	if o == nil {
		return ""
	}
	return o.OffsetFieldName
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
)

type HeaderAuthenticationType string

const (
	HeaderAuthenticationTypeHeader HeaderAuthenticationType = "HEADER"
)

func (e HeaderAuthenticationType) ToPointer() *HeaderAuthenticationType {
	return &e
}

func (e *HeaderAuthenticationType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEADER":
		*e = HeaderAuthenticationType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HeaderAuthenticationType: %v", v)
	}
}

// HeaderAuthentication - Authentication method that uses a header.
type HeaderAuthentication struct {
	Key   string                    `json:"key"`
	Value string                    `json:"value"`
	Type  *HeaderAuthenticationType `default:"HEADER" json:"type"`
}

func (h HeaderAuthentication) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(h, "", false)
}

func (h *HeaderAuthentication) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &h, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *HeaderAuthentication) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

func (o *HeaderAuthentication) GetValue() string {
	if o == nil {
		return ""
	}
	return o.Value
}

func (o *HeaderAuthentication) GetType() *HeaderAuthenticationType {
	if o == nil {
		return nil
	}
	return o.Type
}

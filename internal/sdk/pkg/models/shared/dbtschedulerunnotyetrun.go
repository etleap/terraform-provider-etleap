// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/utils"
	"time"
)

type DbtScheduleRunNotYetRunStatus string

const (
	DbtScheduleRunNotYetRunStatusNotYetRun DbtScheduleRunNotYetRunStatus = "NOT_YET_RUN"
)

func (e DbtScheduleRunNotYetRunStatus) ToPointer() *DbtScheduleRunNotYetRunStatus {
	return &e
}

func (e *DbtScheduleRunNotYetRunStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOT_YET_RUN":
		*e = DbtScheduleRunNotYetRunStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DbtScheduleRunNotYetRunStatus: %v", v)
	}
}

type DbtScheduleRunNotYetRun struct {
	Status DbtScheduleRunNotYetRunStatus `json:"status"`
	// Timestamp for the next dbt schedule trigger.
	NextTriggerDate time.Time `json:"nextTriggerDate"`
}

func (d DbtScheduleRunNotYetRun) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DbtScheduleRunNotYetRun) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *DbtScheduleRunNotYetRun) GetStatus() DbtScheduleRunNotYetRunStatus {
	if o == nil {
		return DbtScheduleRunNotYetRunStatus("")
	}
	return o.Status
}

func (o *DbtScheduleRunNotYetRun) GetNextTriggerDate() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.NextTriggerDate
}

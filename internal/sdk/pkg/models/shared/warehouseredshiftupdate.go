// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WarehouseRedshiftUpdateType string

const (
	WarehouseRedshiftUpdateTypeRedshift WarehouseRedshiftUpdateType = "REDSHIFT"
)

func (e WarehouseRedshiftUpdateType) ToPointer() *WarehouseRedshiftUpdateType {
	return &e
}

func (e *WarehouseRedshiftUpdateType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REDSHIFT":
		*e = WarehouseRedshiftUpdateType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WarehouseRedshiftUpdateType: %v", v)
	}
}

type WarehouseRedshiftUpdate struct {
	Type  WarehouseRedshiftUpdateType `json:"type"`
	Table *string                     `json:"table,omitempty"`
	// The sort columns to use.
	SortColumns []string `json:"sortColumns,omitempty"`
	// Can either be one the strings `ALL`, `AUTO` or `EVEN`, or an object for `KEY` distribution that specifies a column.
	DistributionStyle *DistributionStyle `json:"distributionStyle,omitempty"`
}

func (o *WarehouseRedshiftUpdate) GetType() WarehouseRedshiftUpdateType {
	if o == nil {
		return WarehouseRedshiftUpdateType("")
	}
	return o.Type
}

func (o *WarehouseRedshiftUpdate) GetTable() *string {
	if o == nil {
		return nil
	}
	return o.Table
}

func (o *WarehouseRedshiftUpdate) GetSortColumns() []string {
	if o == nil {
		return nil
	}
	return o.SortColumns
}

func (o *WarehouseRedshiftUpdate) GetDistributionStyle() *DistributionStyle {
	if o == nil {
		return nil
	}
	return o.DistributionStyle
}

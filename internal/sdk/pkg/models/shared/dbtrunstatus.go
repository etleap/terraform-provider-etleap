// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DbtRunStatus string

const (
	DbtRunStatusInProgress             DbtRunStatus = "IN_PROGRESS"
	DbtRunStatusIngestCouldNotComplete DbtRunStatus = "INGEST_COULD_NOT_COMPLETE"
	DbtRunStatusDbtError               DbtRunStatus = "DBT_ERROR"
	DbtRunStatusSuccessWithDbtWarnings DbtRunStatus = "SUCCESS_WITH_DBT_WARNINGS"
	DbtRunStatusSuccess                DbtRunStatus = "SUCCESS"
)

func (e DbtRunStatus) ToPointer() *DbtRunStatus {
	return &e
}

func (e *DbtRunStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IN_PROGRESS":
		fallthrough
	case "INGEST_COULD_NOT_COMPLETE":
		fallthrough
	case "DBT_ERROR":
		fallthrough
	case "SUCCESS_WITH_DBT_WARNINGS":
		fallthrough
	case "SUCCESS":
		*e = DbtRunStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DbtRunStatus: %v", v)
	}
}

// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/models/shared"
	"net/http"
)

type AddDestinationToPipelineRequest struct {
	// The ID of the pipeline to add a destination to.
	ID                       string                           `pathParam:"style=simple,explode=false,name=id"`
	PipelineDestinationInput *shared.PipelineDestinationInput `request:"mediaType=application/json"`
}

func (o *AddDestinationToPipelineRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *AddDestinationToPipelineRequest) GetPipelineDestinationInput() *shared.PipelineDestinationInput {
	if o == nil {
		return nil
	}
	return o.PipelineDestinationInput
}

type AddDestinationToPipelineResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK. The operation was successful.
	DestinationAndPipelineVersions []shared.DestinationAndPipelineVersions
	// Not Found
	Errors *shared.Errors
}

func (o *AddDestinationToPipelineResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *AddDestinationToPipelineResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *AddDestinationToPipelineResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *AddDestinationToPipelineResponse) GetDestinationAndPipelineVersions() []shared.DestinationAndPipelineVersions {
	if o == nil {
		return nil
	}
	return o.DestinationAndPipelineVersions
}

func (o *AddDestinationToPipelineResponse) GetErrors() *shared.Errors {
	if o == nil {
		return nil
	}
	return o.Errors
}

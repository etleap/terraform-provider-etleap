// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/etleap/terraform-provider-etleap/internal/sdk/pkg/models/shared"
	"net/http"
)

type UpdateConnectionRequest struct {
	ID          string      `pathParam:"style=simple,explode=false,name=id"`
	RequestBody interface{} `request:"mediaType=application/json"`
}

func (o *UpdateConnectionRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateConnectionRequest) GetRequestBody() interface{} {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type UpdateConnectionResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// OK.
	ConnectionTypes *shared.ConnectionTypes
	// Bad Request
	Errors *shared.Errors
}

func (o *UpdateConnectionResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateConnectionResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateConnectionResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateConnectionResponse) GetConnectionTypes() *shared.ConnectionTypes {
	if o == nil {
		return nil
	}
	return o.ConnectionTypes
}

func (o *UpdateConnectionResponse) GetConnectionTypesActiveCampaign() *shared.ConnectionActiveCampaign {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionActiveCampaign
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesBigquery() *shared.ConnectionBigQuery {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionBigQuery
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesBingAds() *shared.ConnectionBing {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionBing
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesBlackline() *shared.ConnectionBlackline {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionBlackline
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesCriteo() *shared.ConnectionCriteo {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionCriteo
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesDb2() *shared.ConnectionDb2 {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionDb2
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesDb2Sharded() *shared.ConnectionDb2Sharded {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionDb2Sharded
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesDeltaLake() *shared.ConnectionDeltaLake {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionDeltaLake
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesElasticsearch() *shared.ConnectionElasticSearch {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionElasticSearch
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesElluminate() *shared.ConnectionElluminate {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionElluminate
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesEloqua() *shared.ConnectionEloqua {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionEloqua
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesFacebookAds() *shared.ConnectionFb {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionFb
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesFifteenFive() *shared.ConnectionFifteenFive {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionFifteenFive
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesFreshworks() *shared.ConnectionFreshworks {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionFreshworks
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesFtp() *shared.ConnectionFtp {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionFtp
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesGong() *shared.ConnectionGong {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionGong
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesGoogleAds() *shared.ConnectionGoogleAds {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionGoogleAds
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesGoogleAnalytics() *shared.ConnectionGa {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionGa
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesGoogleAnalyticsGa4() *shared.ConnectionGoogleAnalyticsGa4 {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionGoogleAnalyticsGa4
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesGoogleCloudStorage() *shared.ConnectionGoogleCloudStorage {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionGoogleCloudStorage
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesGoogleSheets() *shared.ConnectionGoogleSheets {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionGoogleSheets
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesHubspot() *shared.ConnectionHubspot {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionHubspot
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesImpactRadius() *shared.ConnectionImpactRadius {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionImpactRadius
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesIntercom() *shared.ConnectionIntercom {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionIntercom
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesJiraAlign() *shared.ConnectionJiraAlign {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionJiraAlign
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesKafka() *shared.ConnectionKafka {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionKafka
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesKustomer() *shared.ConnectionKustomer {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionKustomer
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesLdap() *shared.ConnectionLdap {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionLdap
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesLdapVirtualListView() *shared.ConnectionLdapVirtualListView {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionLdapVirtualListView
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesLinkedInAds() *shared.ConnectionLinkedInAds {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionLinkedInAds
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesMarketo() *shared.ConnectionMarketo {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionMarketo
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesMixpanel() *shared.ConnectionMixpanel {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionMixpanel
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesMongodb() *shared.ConnectionMongo {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionMongo
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesMysql() *shared.ConnectionMysql {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionMysql
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesMysqlSharded() *shared.ConnectionMysqlSharded {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionMysqlSharded
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesNetsuite() *shared.ConnectionNetsuite {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionNetsuite
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesNetsuiteV2() *shared.ConnectionNetsuiteV2 {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionNetsuiteV2
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesOracle() *shared.ConnectionOracle {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionOracle
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesOracleSharded() *shared.ConnectionOracleSharded {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionOracleSharded
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesOutlook() *shared.ConnectionOutlook {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionOutlook
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesOutreach() *shared.ConnectionOutreach {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionOutreach
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesPinterestAds() *shared.ConnectionPinterestAds {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionPinterestAds
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesPostgres() *shared.ConnectionPostgres {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionPostgres
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesPostgresSharded() *shared.ConnectionPostgresSharded {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionPostgresSharded
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesQuoraAds() *shared.ConnectionQuora {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionQuora
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesRaveMedidata() *shared.ConnectionRaveMedidata {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionRaveMedidata
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesRecurly() *shared.ConnectionRecurly {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionRecurly
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesRedshift() *shared.ConnectionRedshift {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionRedshift
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesRedshiftSharded() *shared.ConnectionRedshiftSharded {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionRedshiftSharded
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesS3DataLake() *shared.ConnectionS3DataLake {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionS3DataLake
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesS3Input() *shared.ConnectionS3Input {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionS3Input
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesSalesforce() *shared.ConnectionSalesforce {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionSalesforce
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesSalesforceMarketingCloud() *shared.ConnectionSalesforceMarketingCloud {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionSalesforceMarketingCloud
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesSapHana() *shared.ConnectionSapHana {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionSapHana
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesSapHanaSharded() *shared.ConnectionSapHanaSharded {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionSapHanaSharded
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesSeismic() *shared.ConnectionSeismic {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionSeismic
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesSftp() *shared.ConnectionSftp {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionSftp
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesShopify() *shared.ConnectionShopify {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionShopify
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesSkyward() *shared.ConnectionSkyward {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionSkyward
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesSnapchatAds() *shared.ConnectionSnapchatAds {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionSnapchatAds
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesSnowflake() *shared.ConnectionSnowflake {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionSnowflake
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesSnowflakeSharded() *shared.ConnectionSnowflakeSharded {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionSnowflakeSharded
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesSQLServer() *shared.ConnectionSQLServer {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionSQLServer
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesSQLServerSharded() *shared.ConnectionSQLServerSharded {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionSQLServerSharded
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesSquare() *shared.ConnectionSquare {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionSquare
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesStripe() *shared.ConnectionStripe {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionStripe
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesSumtotal() *shared.ConnectionSumTotal {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionSumTotal
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesTheTradeDesk() *shared.ConnectionTheTradeDesk {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionTheTradeDesk
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesTikTokAds() *shared.ConnectionTikTokAds {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionTikTokAds
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesTwilio() *shared.ConnectionTwilio {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionTwilio
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesTwitterAds() *shared.ConnectionTwitter {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionTwitter
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesUservoice() *shared.ConnectionUserVoice {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionUserVoice
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesUserDefinedAPI() *shared.ConnectionUserDefinedAPI {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionUserDefinedAPI
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesVeeva() *shared.ConnectionVeeva {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionVeeva
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesVerizonMediaDsp() *shared.ConnectionVerizonMedia {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionVerizonMedia
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesWorkdayReport() *shared.ConnectionWorkdayReport {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionWorkdayReport
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesWorkfront() *shared.ConnectionWorkfront {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionWorkfront
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesZendesk() *shared.ConnectionZendesk {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionZendesk
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesZoomPhone() *shared.ConnectionZoomPhone {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionZoomPhone
	}
	return nil
}

func (o *UpdateConnectionResponse) GetConnectionTypesZuora() *shared.ConnectionZuora {
	if v := o.GetConnectionTypes(); v != nil {
		return v.ConnectionZuora
	}
	return nil
}

func (o *UpdateConnectionResponse) GetErrors() *shared.Errors {
	if o == nil {
		return nil
	}
	return o.Errors
}
